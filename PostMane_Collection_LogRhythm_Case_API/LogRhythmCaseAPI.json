{
  "openapi": "3.0.0",
  "info": {
    "title": "LogRhythm Case API",
    "version": "2.6.0",
    "description": "This file describes the available endpoints for the Case service. For more information about tokens, security, and registering third party applications, see the documentation available at https://docs.logrhythm.com/docs/lrapi/case-api.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "tags": [
    {
      "name": "Case Summary",
      "description": "Retrieve case summaries, create new cases, or update the properties of a case."
    },
    {
      "name": "Case Metrics",
      "description": "Retrieve and update metrics for case evidence and status changes."
    },
    {
      "name": "Case Evidence",
      "description": "Manage evidence on a case. Case evidence can include notes, alarms, logs, and other file attachments."
    },
    {
      "name": "Playbooks",
      "description": "Create, retrieve, and update playbooks."
    },
    {
      "name": "Playbook Procedures",
      "description": "Create, retrieve, and update procedures on a playbook."
    },
    {
      "name": "Playbook Attachments",
      "description": "List, link, and download attachments on a playbook."
    },
    {
      "name": "Playbook Import / Export",
      "description": "Import and export playbooks."
    },
    {
      "name": "Files",
      "description": "Upload and retrieve the progress of files."
    },
    {
      "name": "Case Tags",
      "description": "Group and organize cases using tags."
    },
    {
      "name": "Case Collaborators",
      "description": "Manage ownership and collaboration of a case."
    },
    {
      "name": "Associated Cases",
      "description": "Associate related cases."
    },
    {
      "name": "Case History",
      "description": "View history for a particular case."
    },
    {
      "name": "Case Playbooks",
      "description": "Create, retrieve, and update playbooks on a case."
    },
    {
      "name": "Case Playbook Procedures",
      "description": "Create, retrieve, and update playbook procedures on a case."
    },
    {
      "name": "Case Playbook Attachments",
      "description": "List and download playbook attachments on a case."
    },
    {
      "name": "Global History",
      "description": "View history across all cases."
    },
    {
      "name": "Logs Indexes",
      "description": "List log evidence indexes across all cases."
    },
    {
      "name": "Tags",
      "description": "Create and remove tags from the system."
    },
    {
      "name": "Capabilities",
      "description": "Get information about the capabilities of the system."
    },
    {
      "name": "Users",
      "description": "Get information about users in the system."
    },
    {
      "name": "Feature Flags",
      "description": "Flags for turning features in the system on or off."
    },
    {
      "name": "Maintenance",
      "description": "On-demand trigger of maintenance jobs."
    },
    {
      "name": "Breaking Changes",
      "x-traitTag": true,
      "description": "*Breaking Changes* are any changes to existing functionality that may break usage of an API. We attempt to avoid *Breaking\nChanges* as much as possible in order to maintain a stable API contract for integrators.\n\n### 7.4.1 GA\n\n**Playbooks API**\n\n* `/playbooks/:id`\n  * changed `PUT` to require full update representation (instead of a partial update). It also allows creating a new playbook with a specific id.\n  * added `PATCH` to allow partial update of a playbook\n* `/cases/:id/playbooks`\n  * changed `PUT` to `POST` for adding a playbook to a case"
    },
    {
      "name": "Deprecation Notice",
      "x-traitTag": true,
      "description": "*Deprecation Notices* are advanced warning that we intend to break or remove an API in a future release so that integrators\nhave opportunity to change their usage of the API to avoid impact from future *Breaking Changes*.\n\n### 7.4.1 GA\n\n**Cases**\n\n* `/cases/id/:id/*`\n  * undocumented endpoint, will be removed in a future release\n  * should be replaced with `/cases/:id/*`, where `:id` can be either a case id or number\n* `/cases/number/:number/*`\n  * undocumented endpoint, will be removed in a future release\n  * should be replaced with `/cases/:id/*`, where `:id` can be either a case id or number\n* `/cases/externalId/:externalId/*`\n  * undocumented endpoint, will be removed in a future release\n  * should be replaced with `GET /cases?externalId=:externalId`"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Cases",
      "tags": [
        "Case Summary",
        "Case Evidence",
        "Case Collaborators",
        "Case Tags",
        "Associated Cases",
        "Case Metrics"
      ]
    },
    {
      "name": "History",
      "tags": [
        "Global History",
        "Case History"
      ]
    },
    {
      "name": "Playbooks",
      "tags": [
        "Playbooks",
        "Playbook Procedures",
        "Playbook Attachments",
        "Playbook Import / Export"
      ]
    },
    {
      "name": "Case Playbooks",
      "tags": [
        "Case Playbooks",
        "Case Playbook Procedures",
        "Case Playbook Attachments"
      ]
    },
    {
      "name": "Logs Indexes",
      "tags": [
        "Logs Indexes"
      ]
    },
    {
      "name": "Files",
      "tags": [
        "Files"
      ]
    },
    {
      "name": "Tags",
      "tags": [
        "Tags"
      ]
    },
    {
      "name": "Capabilities",
      "tags": [
        "Capabilities"
      ]
    },
    {
      "name": "Unsupported",
      "tags": [
        "Feature Flags",
        "Users",
        "Maintenance"
      ]
    },
    {
      "name": "Change Log",
      "tags": [
        "Breaking Changes",
        "Deprecation Notice"
      ]
    }
  ],
  "paths": {
    "/cases/": {
      "x-swagger-router-controller": "case",
      "get": {
        "tags": [
          "Case Summary"
        ],
        "description": "Returns a filtered list of cases. Supports pagination.",
        "summary": "List Cases",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dateCreated",
                "dateClosed",
                "dateUpdated",
                "name",
                "number",
                "priority",
                "dueDate",
                "age",
                "statusNumber"
              ],
              "default": "dateCreated"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "updatedAfter",
            "description": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "description": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dueBefore",
            "description": "Filter results that have a due date before the specified date. Must be an RFC 3339 formatted string.",
            "in": "query",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "priority",
            "description": "Filter results that have a specific case priority.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ]
              }
            }
          },
          {
            "name": "statusNumber",
            "description": "Filter results that have a specific case status.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ]
              }
            }
          },
          {
            "name": "ownerNumber",
            "description": "Filter results that have a specific case owner, by person numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "collaboratorNumber",
            "description": "Filter results that have a specific case collaborator, by person number.",
            "in": "query",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagNumber",
            "description": "Filter results that are tagged, by tag numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "text",
            "description": "Filter results that have a case number or name that contains the specified value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evidenceType",
            "description": "Filter results that have evidence of the specified type.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alarm",
                  "userEvents",
                  "log",
                  "note",
                  "file"
                ]
              }
            }
          },
          {
            "name": "referenceId",
            "description": "Filter results that have evidence with the given reference identifier. For example, an alarm Id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalId",
            "description": "Filter results that have the specified unique, external identifier.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityNumber",
            "description": "Filter results that have the specified assigned entity number.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "operationId": "listCases",
        "responses": {
          "200": {
            "description": "Returns the filtered list of cases.",
            "headers": {
              "X-Offset": {
                "description": "The number of cases skipped.",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Count": {
                "description": "The number of cases requested.",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Results-Returned": {
                "description": "The number of cases returned.",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Total-Count": {
                "description": "The total number of cases in the system.",
                "schema": {
                  "type": "integer"
                }
              },
              "Last-Modified": {
                "description": "The date and time the most recently modified case in the collection was last updated, as an RFC 3339 formatted string.",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                      },
                      "number": {
                        "description": "Unique, numeric identifier for the case.",
                        "type": "integer",
                        "example": 1
                      },
                      "externalId": {
                        "description": "Externally defined identifier for the case.",
                        "type": "string",
                        "maxLength": 250,
                        "example": "EXTERNAL-1234"
                      },
                      "dateCreated": {
                        "description": "When the case was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateUpdated": {
                        "description": "When the case was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateClosed": {
                        "description": "When the case was closed, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "owner": {
                        "description": "Current owner of the case.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "lastUpdatedBy": {
                        "description": "Last user to update the case.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the case.",
                        "minLength": 1,
                        "maxLength": 250,
                        "example": "System Compromise"
                      },
                      "status": {
                        "description": "Status of the case.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Display name of the status.",
                            "enum": [
                              "Created",
                              "Completed",
                              "Incident",
                              "Mitigated",
                              "Resolved"
                            ],
                            "example": "Mitigated"
                          },
                          "number": {
                            "type": "integer",
                            "description": "Numeric identifier of the status.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "example": 4
                          }
                        }
                      },
                      "priority": {
                        "type": "integer",
                        "description": "Priority of the case.",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "example": 1
                      },
                      "dueDate": {
                        "description": "When the case is due, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "resolution": {
                        "description": "Description of how the case was resolved.",
                        "type": "string",
                        "maxLength": 500,
                        "example": "Quarantined the target system for further investigation.",
                        "nullable": true
                      },
                      "resolutionDateUpdated": {
                        "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "resolutionLastUpdatedBy": {
                        "description": "Last user to update the case resolution.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        },
                        "nullable": true
                      },
                      "summary": {
                        "description": "Note summarizing the case.",
                        "type": "string",
                        "maxLength": 10000,
                        "example": "Investigated a potential system compromise. More details at http://example.com/."
                      },
                      "entity": {
                        "description": "Entity associated with the case.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      },
                      "collaborators": {
                        "description": "List of collaborators on the case.",
                        "x-omitempty": true,
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "description": "Unique, numeric identifier for the person.",
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "description": "Name of the person.",
                              "type": "string",
                              "example": "John Smith"
                            },
                            "disabled": {
                              "description": "If the person is disabled in the system.",
                              "type": "boolean",
                              "example": false
                            }
                          }
                        },
                        "example": [
                          {
                            "number": 1,
                            "name": "John Smith"
                          },
                          {
                            "number": 2,
                            "name": "Jane Clark"
                          }
                        ]
                      },
                      "tags": {
                        "description": "List of tags added to the case.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "description": "Unique, numeric identifier for the tag.",
                              "type": "integer",
                              "example": 1
                            },
                            "text": {
                              "type": "string",
                              "description": "tag text",
                              "maxLength": 255,
                              "example": "System"
                            }
                          }
                        },
                        "example": [
                          {
                            "number": 1,
                            "text": "System"
                          },
                          {
                            "number": 2,
                            "text": "Urgent"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Case Summary"
        ],
        "summary": "Create Case",
        "description": "Create a new case.",
        "operationId": "createCase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "priority"
                ],
                "properties": {
                  "externalId": {
                    "description": "Externally defined identifier for the case.",
                    "type": "string",
                    "maxLength": 250,
                    "example": "EXTERNAL-1234"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the case.",
                    "minLength": 1,
                    "maxLength": 250,
                    "example": "System Compromise"
                  },
                  "priority": {
                    "type": "integer",
                    "description": "Priority of the case.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": 1
                  },
                  "dueDate": {
                    "description": "When the case is due, as an RFC 3339 formatted string.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "summary": {
                    "description": "Note summarizing the case.",
                    "type": "string",
                    "maxLength": 10000,
                    "example": "Investigated a potential system compromise. More details at http://example.com/."
                  },
                  "entityId": {
                    "description": "Entity to assign to the case. Not setting this property will assign the case to the user's default entity. A null value creates a case unrestricted by entity.",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the newly created case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/": {
      "x-swagger-router-controller": "case",
      "get": {
        "tags": [
          "Case Summary"
        ],
        "description": "Returns the summary of a case by Id.",
        "summary": "Get Case",
        "operationId": "getCase",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The returned case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case Summary"
        ],
        "description": "Update case information. For example, the case name, priority, and due date.",
        "summary": "Update Case",
        "operationId": "updateCase",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "description": "Externally defined identifier for the case.",
                    "type": "string",
                    "maxLength": 250,
                    "example": "EXTERNAL-1234"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the case.",
                    "minLength": 1,
                    "maxLength": 250,
                    "example": "System Compromise"
                  },
                  "priority": {
                    "type": "integer",
                    "description": "Priority of the case.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": 1
                  },
                  "dueDate": {
                    "description": "When the case is due, as an RFC 3339 formatted string.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "summary": {
                    "description": "Note summarizing the case.",
                    "type": "string",
                    "maxLength": 10000,
                    "example": "Investigated a potential system compromise. More details at http://example.com/."
                  },
                  "resolution": {
                    "description": "Description of how the case was resolved.",
                    "type": "string",
                    "maxLength": 500,
                    "example": "Quarantined the target system for further investigation.",
                    "nullable": true
                  },
                  "entityId": {
                    "description": "Entity to assign to the case.",
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/actions/changeStatus/": {
      "x-swagger-router-controller": "case",
      "put": {
        "tags": [
          "Case Summary"
        ],
        "operationId": "changeStatus",
        "summary": "Change Case Status *",
        "description": "Update the status of a case.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "statusNumber"
                ],
                "properties": {
                  "statusNumber": {
                    "type": "integer",
                    "description": "Numeric identifier of the status.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": 4
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/collaborators/": {
      "x-swagger-router-controller": "case",
      "get": {
        "tags": [
          "Case Collaborators"
        ],
        "operationId": "getCaseCollaborators",
        "summary": "Get Case Collaborators",
        "description": "Returns the owner and a list of collaborators associated with a specific case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the owner and a list of collaborators associated with the case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case Collaborators"
        ],
        "operationId": "updateCaseCollaborators",
        "summary": "Update Case Collaborators",
        "description": "Updates the owner and collaborators associated with a specific case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "owner",
                  "collaborators"
                ],
                "properties": {
                  "owner": {
                    "description": "Unique, numeric identifier for the person.",
                    "type": "integer",
                    "example": 1
                  },
                  "collaborators": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 1000,
                    "items": {
                      "description": "Numeric identifier for the person or notification group.",
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the owner and a list of collaborators associated with the case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/actions/addCollaborators/": {
      "x-swagger-router-controller": "case",
      "put": {
        "tags": [
          "Case Collaborators"
        ],
        "operationId": "addCollaborators",
        "summary": "Add Case Collaborators *",
        "description": "Add collaborators to a case.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numbers": {
                    "description": "List of numeric person identifiers.",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 100,
                    "items": {
                      "description": "Numeric identifier for the person or notification group.",
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "groupNumbers": {
                    "description": "List of numeric notification group identifiers.",
                    "type": "array",
                    "items": {
                      "description": "Numeric identifier for the person or notification group.",
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated case with added collaborators.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/actions/removeCollaborators/": {
      "x-swagger-router-controller": "case",
      "put": {
        "tags": [
          "Case Collaborators"
        ],
        "operationId": "removeCollaborators",
        "summary": "Remove Case Collaborators *",
        "description": "Remove collaborators from a case. You may not remove the owner as a collaborator from the case.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "numbers"
                ],
                "properties": {
                  "numbers": {
                    "description": "List of numeric person identifiers.",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 100,
                    "items": {
                      "description": "Unique, numeric identifier for the person.",
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/actions/changeOwner/": {
      "x-swagger-router-controller": "case",
      "put": {
        "tags": [
          "Case Collaborators"
        ],
        "operationId": "changeOwner",
        "summary": "Change Case Owner *",
        "description": "Update the owner of a case. The new owner must already be a collaborator on the case.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number"
                ],
                "properties": {
                  "number": {
                    "description": "Unique, numeric identifier for the person.",
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated case with the newly updated owner.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/actions/addTags/": {
      "x-swagger-router-controller": "case",
      "put": {
        "tags": [
          "Case Tags"
        ],
        "operationId": "addTags",
        "summary": "Add Case Tags *",
        "description": "Add tags to a case.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/addTagsAddtagsbody"
        },
        "responses": {
          "200": {
            "description": "Returns the updated case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/actions/removeTags/": {
      "x-swagger-router-controller": "case",
      "put": {
        "tags": [
          "Case Tags"
        ],
        "operationId": "removeTags",
        "summary": "Remove Case Tags *",
        "description": "Remove tags from a case.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/addTagsAddtagsbody"
        },
        "responses": {
          "200": {
            "description": "Returns the updated case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "number": {
                      "description": "Unique, numeric identifier for the case.",
                      "type": "integer",
                      "example": 1
                    },
                    "externalId": {
                      "description": "Externally defined identifier for the case.",
                      "type": "string",
                      "maxLength": 250,
                      "example": "EXTERNAL-1234"
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateClosed": {
                      "description": "When the case was closed, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "owner": {
                      "description": "Current owner of the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the case.",
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "System Compromise"
                    },
                    "status": {
                      "description": "Status of the case.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of the status.",
                          "enum": [
                            "Created",
                            "Completed",
                            "Incident",
                            "Mitigated",
                            "Resolved"
                          ],
                          "example": "Mitigated"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Numeric identifier of the status.",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ],
                          "example": 4
                        }
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Priority of the case.",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "example": 1
                    },
                    "dueDate": {
                      "description": "When the case is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolution": {
                      "description": "Description of how the case was resolved.",
                      "type": "string",
                      "maxLength": 500,
                      "example": "Quarantined the target system for further investigation.",
                      "nullable": true
                    },
                    "resolutionDateUpdated": {
                      "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "resolutionLastUpdatedBy": {
                      "description": "Last user to update the case resolution.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "summary": {
                      "description": "Note summarizing the case.",
                      "type": "string",
                      "maxLength": 10000,
                      "example": "Investigated a potential system compromise. More details at http://example.com/."
                    },
                    "entity": {
                      "description": "Entity associated with the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the entity.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the Entity.",
                          "type": "string",
                          "example": "Child Entity"
                        },
                        "fullName": {
                          "description": "A full representation of the Entity as child with its parent Entity.",
                          "type": "string",
                          "example": "Parent Entity/Child Entity"
                        }
                      }
                    },
                    "collaborators": {
                      "description": "List of collaborators on the case.",
                      "x-omitempty": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "name": "John Smith"
                        },
                        {
                          "number": 2,
                          "name": "Jane Clark"
                        }
                      ]
                    },
                    "tags": {
                      "description": "List of tags added to the case.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/associated/": {
      "x-swagger-router-controller": "associatedCases",
      "get": {
        "tags": [
          "Associated Cases"
        ],
        "operationId": "listAssociatedCases",
        "summary": "List Associated Cases",
        "description": "Returns a list of cases associated with a specific case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the associated case summaries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                      },
                      "number": {
                        "description": "Unique, numeric identifier for the case.",
                        "type": "integer",
                        "example": 1
                      },
                      "externalId": {
                        "description": "Externally defined identifier for the case.",
                        "type": "string",
                        "maxLength": 250,
                        "example": "EXTERNAL-1234"
                      },
                      "private": {
                        "type": "boolean"
                      },
                      "summary": {
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                            "type": "string",
                            "format": "uuid",
                            "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                          },
                          "number": {
                            "description": "Unique, numeric identifier for the case.",
                            "type": "integer",
                            "example": 1
                          },
                          "externalId": {
                            "description": "Externally defined identifier for the case.",
                            "type": "string",
                            "maxLength": 250,
                            "example": "EXTERNAL-1234"
                          },
                          "dateCreated": {
                            "description": "When the case was created, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateUpdated": {
                            "description": "When the case was last updated, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateClosed": {
                            "description": "When the case was closed, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "owner": {
                            "description": "Current owner of the case.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the person.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the person.",
                                "type": "string",
                                "example": "John Smith"
                              },
                              "disabled": {
                                "description": "If the person is disabled in the system.",
                                "type": "boolean",
                                "example": false
                              }
                            }
                          },
                          "lastUpdatedBy": {
                            "description": "Last user to update the case.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the person.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the person.",
                                "type": "string",
                                "example": "John Smith"
                              },
                              "disabled": {
                                "description": "If the person is disabled in the system.",
                                "type": "boolean",
                                "example": false
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the case.",
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "System Compromise"
                          },
                          "status": {
                            "description": "Status of the case.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Display name of the status.",
                                "enum": [
                                  "Created",
                                  "Completed",
                                  "Incident",
                                  "Mitigated",
                                  "Resolved"
                                ],
                                "example": "Mitigated"
                              },
                              "number": {
                                "type": "integer",
                                "description": "Numeric identifier of the status.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "example": 4
                              }
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Priority of the case.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "example": 1
                          },
                          "dueDate": {
                            "description": "When the case is due, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "resolution": {
                            "description": "Description of how the case was resolved.",
                            "type": "string",
                            "maxLength": 500,
                            "example": "Quarantined the target system for further investigation.",
                            "nullable": true
                          },
                          "resolutionDateUpdated": {
                            "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "resolutionLastUpdatedBy": {
                            "description": "Last user to update the case resolution.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the person.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the person.",
                                "type": "string",
                                "example": "John Smith"
                              },
                              "disabled": {
                                "description": "If the person is disabled in the system.",
                                "type": "boolean",
                                "example": false
                              }
                            },
                            "nullable": true
                          },
                          "summary": {
                            "description": "Note summarizing the case.",
                            "type": "string",
                            "maxLength": 10000,
                            "example": "Investigated a potential system compromise. More details at http://example.com/."
                          },
                          "entity": {
                            "description": "Entity associated with the case.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the entity.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the Entity.",
                                "type": "string",
                                "example": "Child Entity"
                              },
                              "fullName": {
                                "description": "A full representation of the Entity as child with its parent Entity.",
                                "type": "string",
                                "example": "Parent Entity/Child Entity"
                              }
                            }
                          },
                          "collaborators": {
                            "description": "List of collaborators on the case.",
                            "x-omitempty": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "description": "Unique, numeric identifier for the person.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "name": {
                                  "description": "Name of the person.",
                                  "type": "string",
                                  "example": "John Smith"
                                },
                                "disabled": {
                                  "description": "If the person is disabled in the system.",
                                  "type": "boolean",
                                  "example": false
                                }
                              }
                            },
                            "example": [
                              {
                                "number": 1,
                                "name": "John Smith"
                              },
                              {
                                "number": 2,
                                "name": "Jane Clark"
                              }
                            ]
                          },
                          "tags": {
                            "description": "List of tags added to the case.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "description": "Unique, numeric identifier for the tag.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "text": {
                                  "type": "string",
                                  "description": "tag text",
                                  "maxLength": 255,
                                  "example": "System"
                                }
                              }
                            },
                            "example": [
                              {
                                "number": 1,
                                "text": "System"
                              },
                              {
                                "number": 2,
                                "text": "Urgent"
                              }
                            ]
                          }
                        },
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Associated Cases"
        ],
        "operationId": "addAssociatedCases",
        "description": "Associate cases with a specific case.",
        "summary": "Add Associated Cases",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/addAssociatedCasesAddassociatedcasesbody"
        },
        "responses": {
          "200": {
            "description": "Returns the requested associated case summaries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                      },
                      "number": {
                        "description": "Unique, numeric identifier for the case.",
                        "type": "integer",
                        "example": 1
                      },
                      "externalId": {
                        "description": "Externally defined identifier for the case.",
                        "type": "string",
                        "maxLength": 250,
                        "example": "EXTERNAL-1234"
                      },
                      "private": {
                        "type": "boolean"
                      },
                      "summary": {
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                            "type": "string",
                            "format": "uuid",
                            "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                          },
                          "number": {
                            "description": "Unique, numeric identifier for the case.",
                            "type": "integer",
                            "example": 1
                          },
                          "externalId": {
                            "description": "Externally defined identifier for the case.",
                            "type": "string",
                            "maxLength": 250,
                            "example": "EXTERNAL-1234"
                          },
                          "dateCreated": {
                            "description": "When the case was created, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateUpdated": {
                            "description": "When the case was last updated, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "dateClosed": {
                            "description": "When the case was closed, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "owner": {
                            "description": "Current owner of the case.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the person.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the person.",
                                "type": "string",
                                "example": "John Smith"
                              },
                              "disabled": {
                                "description": "If the person is disabled in the system.",
                                "type": "boolean",
                                "example": false
                              }
                            }
                          },
                          "lastUpdatedBy": {
                            "description": "Last user to update the case.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the person.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the person.",
                                "type": "string",
                                "example": "John Smith"
                              },
                              "disabled": {
                                "description": "If the person is disabled in the system.",
                                "type": "boolean",
                                "example": false
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the case.",
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "System Compromise"
                          },
                          "status": {
                            "description": "Status of the case.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Display name of the status.",
                                "enum": [
                                  "Created",
                                  "Completed",
                                  "Incident",
                                  "Mitigated",
                                  "Resolved"
                                ],
                                "example": "Mitigated"
                              },
                              "number": {
                                "type": "integer",
                                "description": "Numeric identifier of the status.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "example": 4
                              }
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Priority of the case.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "example": 1
                          },
                          "dueDate": {
                            "description": "When the case is due, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "resolution": {
                            "description": "Description of how the case was resolved.",
                            "type": "string",
                            "maxLength": 500,
                            "example": "Quarantined the target system for further investigation.",
                            "nullable": true
                          },
                          "resolutionDateUpdated": {
                            "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "resolutionLastUpdatedBy": {
                            "description": "Last user to update the case resolution.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the person.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the person.",
                                "type": "string",
                                "example": "John Smith"
                              },
                              "disabled": {
                                "description": "If the person is disabled in the system.",
                                "type": "boolean",
                                "example": false
                              }
                            },
                            "nullable": true
                          },
                          "summary": {
                            "description": "Note summarizing the case.",
                            "type": "string",
                            "maxLength": 10000,
                            "example": "Investigated a potential system compromise. More details at http://example.com/."
                          },
                          "entity": {
                            "description": "Entity associated with the case.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the entity.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the Entity.",
                                "type": "string",
                                "example": "Child Entity"
                              },
                              "fullName": {
                                "description": "A full representation of the Entity as child with its parent Entity.",
                                "type": "string",
                                "example": "Parent Entity/Child Entity"
                              }
                            }
                          },
                          "collaborators": {
                            "description": "List of collaborators on the case.",
                            "x-omitempty": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "description": "Unique, numeric identifier for the person.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "name": {
                                  "description": "Name of the person.",
                                  "type": "string",
                                  "example": "John Smith"
                                },
                                "disabled": {
                                  "description": "If the person is disabled in the system.",
                                  "type": "boolean",
                                  "example": false
                                }
                              }
                            },
                            "example": [
                              {
                                "number": 1,
                                "name": "John Smith"
                              },
                              {
                                "number": 2,
                                "name": "Jane Clark"
                              }
                            ]
                          },
                          "tags": {
                            "description": "List of tags added to the case.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "description": "Unique, numeric identifier for the tag.",
                                  "type": "integer",
                                  "example": 1
                                },
                                "text": {
                                  "type": "string",
                                  "description": "tag text",
                                  "maxLength": 255,
                                  "example": "System"
                                }
                              }
                            },
                            "example": [
                              {
                                "number": 1,
                                "text": "System"
                              },
                              {
                                "number": 2,
                                "text": "Urgent"
                              }
                            ]
                          }
                        },
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Associated Cases"
        ],
        "operationId": "removeAssociatedCases",
        "description": "Remove associated cases from a case.",
        "summary": "Remove Associated Cases",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/addAssociatedCasesAddassociatedcasesbody"
        },
        "responses": {
          "204": {
            "description": "No body is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/metrics/": {
      "x-swagger-router-controller": "metrics",
      "get": {
        "tags": [
          "Case Metrics"
        ],
        "operationId": "listMetrics",
        "summary": "Get Case Metrics",
        "description": "Return metrics for a specified case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the case metrics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "completed": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "incident": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "mitigated": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "resolved": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "earliestEvidence": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    }
                  },
                  "example": {
                    "created": {
                      "date": "2017-09-15T15:49:53.499Z",
                      "originalDate": "2017-09-15T15:49:53.499Z",
                      "customDate": null,
                      "note": ""
                    },
                    "completed": {
                      "date": null,
                      "originalDate": null,
                      "customDate": null,
                      "note": ""
                    },
                    "incident": {
                      "date": "2017-09-15T15:49:53.499Z",
                      "originalDate": "2017-09-15T15:49:53.499Z",
                      "customDate": null,
                      "note": ""
                    },
                    "mitigated": {
                      "date": "2017-09-15T15:49:53.499Z",
                      "originalDate": "2017-09-15T15:49:53.499Z",
                      "customDate": null,
                      "note": ""
                    },
                    "resolved": {
                      "date": null,
                      "originalDate": null,
                      "customDate": null,
                      "note": ""
                    },
                    "earliestEvidence": {
                      "date": "2017-09-15T09:47:22.000Z",
                      "originalDate": "2017-09-15T09:45:22.000Z",
                      "customDate": "2017-09-15T09:45:22.000Z",
                      "note": "Custom date for earliest evidence"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case Metrics"
        ],
        "operationId": "updateCustomMetrics",
        "summary": "Update Case Metrics",
        "description": "Modify custom metric values for a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "earliestEvidence": {
                    "type": "object",
                    "properties": {
                      "customDate": {
                        "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "note": {
                        "description": "A reason for the custom metric date.",
                        "type": "string",
                        "maxLength": 500,
                        "example": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated metrics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "completed": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "incident": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "mitigated": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "resolved": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    },
                    "earliestEvidence": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "originalDate": {
                          "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "customDate": {
                          "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "note": {
                          "description": "A reason for the custom metric date.",
                          "type": "string",
                          "maxLength": 500,
                          "example": ""
                        }
                      }
                    }
                  },
                  "example": {
                    "created": {
                      "date": "2017-09-15T15:49:53.499Z",
                      "originalDate": "2017-09-15T15:49:53.499Z",
                      "customDate": null,
                      "note": ""
                    },
                    "completed": {
                      "date": null,
                      "originalDate": null,
                      "customDate": null,
                      "note": ""
                    },
                    "incident": {
                      "date": "2017-09-15T15:49:53.499Z",
                      "originalDate": "2017-09-15T15:49:53.499Z",
                      "customDate": null,
                      "note": ""
                    },
                    "mitigated": {
                      "date": "2017-09-15T15:49:53.499Z",
                      "originalDate": "2017-09-15T15:49:53.499Z",
                      "customDate": null,
                      "note": ""
                    },
                    "resolved": {
                      "date": null,
                      "originalDate": null,
                      "customDate": null,
                      "note": ""
                    },
                    "earliestEvidence": {
                      "date": "2017-09-15T09:47:22.000Z",
                      "originalDate": "2017-09-15T09:45:22.000Z",
                      "customDate": "2017-09-15T09:45:22.000Z",
                      "note": "Custom date for earliest evidence"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/": {
      "x-swagger-router-controller": "evidence",
      "get": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "listEvidence",
        "summary": "List Evidence",
        "description": "Return a list of evidence summaries for a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "type",
            "description": "Filter results that have evidence of the specified type.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alarm",
                  "userEvents",
                  "log",
                  "note",
                  "file"
                ]
              }
            }
          },
          {
            "name": "status",
            "description": "Filter results that have a specific evidence status.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "completed",
                  "failed"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of evidence associated with a case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "description": "Unique, numeric identifier for the evidence.",
                        "type": "integer",
                        "example": 1
                      },
                      "dateCreated": {
                        "description": "When the evidence was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateUpdated": {
                        "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "description": "User that created the evidence.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "lastUpdatedBy": {
                        "description": "Last user to update the evidence.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "type": {
                        "description": "The type of evidence.",
                        "type": "string",
                        "enum": [
                          "note",
                          "file",
                          "log",
                          "alarm",
                          "userEvents",
                          "unknown"
                        ]
                      },
                      "status": {
                        "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                        "type": "string",
                        "enum": [
                          "pending",
                          "completed",
                          "failed",
                          "unknown"
                        ],
                        "example": "completed"
                      },
                      "statusMessage": {
                        "description": "If adding evidence failed, describes the failure reason.",
                        "type": "string",
                        "example": null,
                        "nullable": true
                      },
                      "text": {
                        "description": "Note describing the evidence.",
                        "type": "string",
                        "example": "Need to investigate target host"
                      },
                      "pinned": {
                        "description": "Whether the evidence is pinned.",
                        "type": "boolean",
                        "example": true
                      },
                      "datePinned": {
                        "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "file": {
                        "description": "Properties of the file uploaded as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the uploaded file.",
                            "type": "string",
                            "example": "instructions.pdf"
                          },
                          "size": {
                            "description": "Size of the file in bytes.",
                            "type": "integer",
                            "example": 1024
                          }
                        },
                        "nullable": true
                      },
                      "alarm": {
                        "description": "Properties of the alarm added as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "alarmId": {
                            "description": "Unique, numeric identifier for the alarm.",
                            "type": "integer",
                            "example": 1
                          },
                          "alarmDate": {
                            "description": "When the alarm fired, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "alarmRuleId": {
                            "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                            "type": "integer",
                            "example": 1
                          },
                          "alarmRuleName": {
                            "description": "Name of the rule that fired the alarm.",
                            "type": "string",
                            "example": "Compromised System Detected"
                          },
                          "dateInserted": {
                            "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "entityId": {
                            "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                            "type": "integer",
                            "example": 1
                          },
                          "entityName": {
                            "description": "Name of the entity with which the alarm is associated.",
                            "type": "string",
                            "example": "Primary Entity"
                          },
                          "riskBasedPriorityMax": {
                            "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                            "type": "integer",
                            "example": 85
                          }
                        },
                        "nullable": true
                      },
                      "logs": {
                        "description": "Properties of the log set added as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "logCount": {
                            "description": "Number of logs in the set.",
                            "type": "integer",
                            "example": 100
                          },
                          "query": {
                            "description": "Query used to add logs as evidence.",
                            "type": "string",
                            "example": "messageId:(744280 OR 728289)",
                            "nullable": true
                          },
                          "searchIndexId": {
                            "description": "Id of the index containing the log data.",
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "nullable": true
                      },
                      "userEvents": {
                        "description": "Properties of the user event set added as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "identityId": {
                            "description": "The unique identifier of the user identity for the added events.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": 1
                          },
                          "score": {
                            "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                            "type": "integer",
                            "example": 85
                          },
                          "eventCount": {
                            "description": "The number of events in the set.",
                            "type": "integer",
                            "example": 15
                          },
                          "analysisStartDate": {
                            "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "analysisEndDate": {
                            "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "example": {
                      "number": 1,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "completed",
                      "text": "Need to investigate target host",
                      "pinned": true,
                      "datePinned": "2017-09-27T18:21:44.000Z"
                    }
                  },
                  "example": [
                    {
                      "number": 1,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "completed",
                      "text": "Need to investigate target host",
                      "pinned": true,
                      "datePinned": "2017-09-27T18:21:44.000Z"
                    },
                    {
                      "number": 2,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "pending",
                      "text": "Documentation on what to do next",
                      "pinned": true,
                      "datePinned": "2017-09-27T18:21:44.000Z",
                      "file": {
                        "name": "instructions.pdf",
                        "size": 1024
                      }
                    },
                    {
                      "number": 3,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "completed",
                      "pinned": false,
                      "datePinned": null,
                      "alarm": {
                        "alarmId": 1,
                        "alarmDate": "2017-09-27T18:21:44.000Z",
                        "alarmRuleId": 1,
                        "alarmRuleName": "Compromised System Detected",
                        "dateInserted": "2017-09-27T18:21:44.000Z",
                        "entityId": 1,
                        "entityName": "Primary Entity",
                        "riskBasedPriorityMax": 85
                      }
                    },
                    {
                      "number": 4,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "pending",
                      "text": "Some interesting logs",
                      "pinned": true,
                      "datePinned": "2017-09-27T18:21:44.000Z",
                      "logs": {
                        "logCount": 100
                      }
                    },
                    {
                      "number": 5,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "pending",
                      "pinned": false,
                      "datePinned": null,
                      "userEvents": {
                        "identityId": 1,
                        "score": 85,
                        "eventCount": 15,
                        "analysisStartDate": "2017-09-27T18:21:44.000Z",
                        "analysisEndDate": "2017-09-27T18:21:44.000Z"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/file/": {
      "x-swagger-router-controller": "evidence",
      "post": {
        "tags": [
          "Case Evidence"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "note": {
                    "type": "string",
                    "maxLength": 20000
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          },
          "required": true
        },
        "operationId": "createFileEvidence",
        "summary": "Add File Evidence",
        "description": "Upload a file as evidence on a case.",
        "responses": {
          "201": {
            "description": "Returns the newly uploaded evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the evidence.",
                      "type": "integer",
                      "example": 1
                    },
                    "dateCreated": {
                      "description": "When the evidence was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "type": {
                      "description": "The type of evidence.",
                      "type": "string",
                      "enum": [
                        "note",
                        "file",
                        "log",
                        "alarm",
                        "userEvents",
                        "unknown"
                      ]
                    },
                    "status": {
                      "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "statusMessage": {
                      "description": "If adding evidence failed, describes the failure reason.",
                      "type": "string",
                      "example": null,
                      "nullable": true
                    },
                    "text": {
                      "description": "Note describing the evidence.",
                      "type": "string",
                      "example": "Need to investigate target host"
                    },
                    "pinned": {
                      "description": "Whether the evidence is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "file": {
                      "description": "Properties of the file uploaded as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the uploaded file.",
                          "type": "string",
                          "example": "instructions.pdf"
                        },
                        "size": {
                          "description": "Size of the file in bytes.",
                          "type": "integer",
                          "example": 1024
                        }
                      },
                      "nullable": true
                    },
                    "alarm": {
                      "description": "Properties of the alarm added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "alarmId": {
                          "description": "Unique, numeric identifier for the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmDate": {
                          "description": "When the alarm fired, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "alarmRuleId": {
                          "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmRuleName": {
                          "description": "Name of the rule that fired the alarm.",
                          "type": "string",
                          "example": "Compromised System Detected"
                        },
                        "dateInserted": {
                          "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "entityId": {
                          "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                          "type": "integer",
                          "example": 1
                        },
                        "entityName": {
                          "description": "Name of the entity with which the alarm is associated.",
                          "type": "string",
                          "example": "Primary Entity"
                        },
                        "riskBasedPriorityMax": {
                          "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        }
                      },
                      "nullable": true
                    },
                    "logs": {
                      "description": "Properties of the log set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "logCount": {
                          "description": "Number of logs in the set.",
                          "type": "integer",
                          "example": 100
                        },
                        "query": {
                          "description": "Query used to add logs as evidence.",
                          "type": "string",
                          "example": "messageId:(744280 OR 728289)",
                          "nullable": true
                        },
                        "searchIndexId": {
                          "description": "Id of the index containing the log data.",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "userEvents": {
                      "description": "Properties of the user event set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "identityId": {
                          "description": "The unique identifier of the user identity for the added events.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": 1
                        },
                        "score": {
                          "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        },
                        "eventCount": {
                          "description": "The number of events in the set.",
                          "type": "integer",
                          "example": 15
                        },
                        "analysisStartDate": {
                          "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "analysisEndDate": {
                          "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "example": {
                    "number": 1,
                    "dateCreated": "2017-09-27T18:21:44.000Z",
                    "dateUpdated": "2017-09-27T18:21:44.000Z",
                    "createdBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "lastUpdatedBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "type": "note",
                    "status": "completed",
                    "text": "Need to investigate target host",
                    "pinned": true,
                    "datePinned": "2017-09-27T18:21:44.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/alarms/": {
      "x-swagger-router-controller": "evidence",
      "post": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "createAlarmEvidence",
        "summary": "Add Alarm Evidence",
        "description": "Add multiple alarms as evidence on a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "alarmNumbers"
                ],
                "properties": {
                  "alarmNumbers": {
                    "description": "The numeric Ids for the alarms to add as evidence on a case.",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 100,
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the newly added alarms as evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "description": "Unique, numeric identifier for the evidence.",
                        "type": "integer",
                        "example": 1
                      },
                      "dateCreated": {
                        "description": "When the evidence was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateUpdated": {
                        "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "description": "User that created the evidence.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "lastUpdatedBy": {
                        "description": "Last user to update the evidence.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "type": {
                        "description": "The type of evidence.",
                        "type": "string",
                        "enum": [
                          "note",
                          "file",
                          "log",
                          "alarm",
                          "userEvents",
                          "unknown"
                        ]
                      },
                      "status": {
                        "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                        "type": "string",
                        "enum": [
                          "pending",
                          "completed",
                          "failed",
                          "unknown"
                        ],
                        "example": "completed"
                      },
                      "statusMessage": {
                        "description": "If adding evidence failed, describes the failure reason.",
                        "type": "string",
                        "example": null,
                        "nullable": true
                      },
                      "text": {
                        "description": "Note describing the evidence.",
                        "type": "string",
                        "example": "Need to investigate target host"
                      },
                      "pinned": {
                        "description": "Whether the evidence is pinned.",
                        "type": "boolean",
                        "example": true
                      },
                      "datePinned": {
                        "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "file": {
                        "description": "Properties of the file uploaded as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the uploaded file.",
                            "type": "string",
                            "example": "instructions.pdf"
                          },
                          "size": {
                            "description": "Size of the file in bytes.",
                            "type": "integer",
                            "example": 1024
                          }
                        },
                        "nullable": true
                      },
                      "alarm": {
                        "description": "Properties of the alarm added as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "alarmId": {
                            "description": "Unique, numeric identifier for the alarm.",
                            "type": "integer",
                            "example": 1
                          },
                          "alarmDate": {
                            "description": "When the alarm fired, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "alarmRuleId": {
                            "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                            "type": "integer",
                            "example": 1
                          },
                          "alarmRuleName": {
                            "description": "Name of the rule that fired the alarm.",
                            "type": "string",
                            "example": "Compromised System Detected"
                          },
                          "dateInserted": {
                            "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "entityId": {
                            "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                            "type": "integer",
                            "example": 1
                          },
                          "entityName": {
                            "description": "Name of the entity with which the alarm is associated.",
                            "type": "string",
                            "example": "Primary Entity"
                          },
                          "riskBasedPriorityMax": {
                            "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                            "type": "integer",
                            "example": 85
                          }
                        },
                        "nullable": true
                      },
                      "logs": {
                        "description": "Properties of the log set added as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "logCount": {
                            "description": "Number of logs in the set.",
                            "type": "integer",
                            "example": 100
                          },
                          "query": {
                            "description": "Query used to add logs as evidence.",
                            "type": "string",
                            "example": "messageId:(744280 OR 728289)",
                            "nullable": true
                          },
                          "searchIndexId": {
                            "description": "Id of the index containing the log data.",
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "nullable": true
                      },
                      "userEvents": {
                        "description": "Properties of the user event set added as evidence.",
                        "x-omitempty": true,
                        "type": "object",
                        "properties": {
                          "identityId": {
                            "description": "The unique identifier of the user identity for the added events.",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "example": 1
                          },
                          "score": {
                            "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                            "type": "integer",
                            "example": 85
                          },
                          "eventCount": {
                            "description": "The number of events in the set.",
                            "type": "integer",
                            "example": 15
                          },
                          "analysisStartDate": {
                            "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "analysisEndDate": {
                            "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "nullable": true
                      }
                    },
                    "example": {
                      "number": 1,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "completed",
                      "text": "Need to investigate target host",
                      "pinned": true,
                      "datePinned": "2017-09-27T18:21:44.000Z"
                    }
                  },
                  "example": [
                    {
                      "number": 3,
                      "dateCreated": "2017-09-27T18:21:44.000Z",
                      "dateUpdated": "2017-09-27T18:21:44.000Z",
                      "createdBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "lastUpdatedBy": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "type": "note",
                      "status": "completed",
                      "pinned": false,
                      "datePinned": null,
                      "alarm": {
                        "alarmId": 1,
                        "alarmDate": "2017-09-27T18:21:44.000Z",
                        "alarmRuleId": 1,
                        "alarmRuleName": "Compromised System Detected",
                        "dateInserted": "2017-09-27T18:21:44.000Z",
                        "entityId": 1,
                        "entityName": "Primary Entity",
                        "riskBasedPriorityMax": 85
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/log/": {
      "x-swagger-router-controller": "evidence",
      "post": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "createLogEvidence",
        "summary": "Add Log Evidence",
        "description": "Add logs as evidence on a case.\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "indexId",
                  "query"
                ],
                "properties": {
                  "indexId": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40000
                  },
                  "note": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the newly added logs as evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the evidence.",
                      "type": "integer",
                      "example": 1
                    },
                    "dateCreated": {
                      "description": "When the evidence was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "type": {
                      "description": "The type of evidence.",
                      "type": "string",
                      "enum": [
                        "note",
                        "file",
                        "log",
                        "alarm",
                        "userEvents",
                        "unknown"
                      ]
                    },
                    "status": {
                      "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "statusMessage": {
                      "description": "If adding evidence failed, describes the failure reason.",
                      "type": "string",
                      "example": null,
                      "nullable": true
                    },
                    "text": {
                      "description": "Note describing the evidence.",
                      "type": "string",
                      "example": "Need to investigate target host"
                    },
                    "pinned": {
                      "description": "Whether the evidence is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "file": {
                      "description": "Properties of the file uploaded as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the uploaded file.",
                          "type": "string",
                          "example": "instructions.pdf"
                        },
                        "size": {
                          "description": "Size of the file in bytes.",
                          "type": "integer",
                          "example": 1024
                        }
                      },
                      "nullable": true
                    },
                    "alarm": {
                      "description": "Properties of the alarm added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "alarmId": {
                          "description": "Unique, numeric identifier for the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmDate": {
                          "description": "When the alarm fired, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "alarmRuleId": {
                          "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmRuleName": {
                          "description": "Name of the rule that fired the alarm.",
                          "type": "string",
                          "example": "Compromised System Detected"
                        },
                        "dateInserted": {
                          "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "entityId": {
                          "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                          "type": "integer",
                          "example": 1
                        },
                        "entityName": {
                          "description": "Name of the entity with which the alarm is associated.",
                          "type": "string",
                          "example": "Primary Entity"
                        },
                        "riskBasedPriorityMax": {
                          "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        }
                      },
                      "nullable": true
                    },
                    "logs": {
                      "description": "Properties of the log set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "logCount": {
                          "description": "Number of logs in the set.",
                          "type": "integer",
                          "example": 100
                        },
                        "query": {
                          "description": "Query used to add logs as evidence.",
                          "type": "string",
                          "example": "messageId:(744280 OR 728289)",
                          "nullable": true
                        },
                        "searchIndexId": {
                          "description": "Id of the index containing the log data.",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "userEvents": {
                      "description": "Properties of the user event set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "identityId": {
                          "description": "The unique identifier of the user identity for the added events.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": 1
                        },
                        "score": {
                          "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        },
                        "eventCount": {
                          "description": "The number of events in the set.",
                          "type": "integer",
                          "example": 15
                        },
                        "analysisStartDate": {
                          "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "analysisEndDate": {
                          "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "example": {
                    "number": 1,
                    "dateCreated": "2017-09-27T18:21:44.000Z",
                    "dateUpdated": "2017-09-27T18:21:44.000Z",
                    "createdBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "lastUpdatedBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "type": "note",
                    "status": "completed",
                    "text": "Need to investigate target host",
                    "pinned": true,
                    "datePinned": "2017-09-27T18:21:44.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/userEvents/": {
      "x-swagger-router-controller": "evidence",
      "post": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "createUserEventsEvidence",
        "summary": "Add User Event Evidence",
        "description": "Add user events as evidence on a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "identityId",
                  "score",
                  "events",
                  "analysisStartDate",
                  "analysisEndDate"
                ],
                "properties": {
                  "identityId": {
                    "description": "The unique identifier of the user identity for the added events.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": 1
                  },
                  "score": {
                    "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                    "type": "integer",
                    "example": 85
                  },
                  "analysisStartDate": {
                    "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "analysisEndDate": {
                    "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "events": {
                    "description": "A set of user events.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "earliestEvidenceDate": {
                    "description": "The date of the first event in the set, as an RFC 3339 formatted string.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the newly added user events as evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the evidence.",
                      "type": "integer",
                      "example": 1
                    },
                    "dateCreated": {
                      "description": "When the evidence was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "type": {
                      "description": "The type of evidence.",
                      "type": "string",
                      "enum": [
                        "note",
                        "file",
                        "log",
                        "alarm",
                        "userEvents",
                        "unknown"
                      ]
                    },
                    "status": {
                      "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "statusMessage": {
                      "description": "If adding evidence failed, describes the failure reason.",
                      "type": "string",
                      "example": null,
                      "nullable": true
                    },
                    "text": {
                      "description": "Note describing the evidence.",
                      "type": "string",
                      "example": "Need to investigate target host"
                    },
                    "pinned": {
                      "description": "Whether the evidence is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "file": {
                      "description": "Properties of the file uploaded as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the uploaded file.",
                          "type": "string",
                          "example": "instructions.pdf"
                        },
                        "size": {
                          "description": "Size of the file in bytes.",
                          "type": "integer",
                          "example": 1024
                        }
                      },
                      "nullable": true
                    },
                    "alarm": {
                      "description": "Properties of the alarm added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "alarmId": {
                          "description": "Unique, numeric identifier for the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmDate": {
                          "description": "When the alarm fired, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "alarmRuleId": {
                          "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmRuleName": {
                          "description": "Name of the rule that fired the alarm.",
                          "type": "string",
                          "example": "Compromised System Detected"
                        },
                        "dateInserted": {
                          "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "entityId": {
                          "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                          "type": "integer",
                          "example": 1
                        },
                        "entityName": {
                          "description": "Name of the entity with which the alarm is associated.",
                          "type": "string",
                          "example": "Primary Entity"
                        },
                        "riskBasedPriorityMax": {
                          "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        }
                      },
                      "nullable": true
                    },
                    "logs": {
                      "description": "Properties of the log set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "logCount": {
                          "description": "Number of logs in the set.",
                          "type": "integer",
                          "example": 100
                        },
                        "query": {
                          "description": "Query used to add logs as evidence.",
                          "type": "string",
                          "example": "messageId:(744280 OR 728289)",
                          "nullable": true
                        },
                        "searchIndexId": {
                          "description": "Id of the index containing the log data.",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "userEvents": {
                      "description": "Properties of the user event set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "identityId": {
                          "description": "The unique identifier of the user identity for the added events.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": 1
                        },
                        "score": {
                          "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        },
                        "eventCount": {
                          "description": "The number of events in the set.",
                          "type": "integer",
                          "example": 15
                        },
                        "analysisStartDate": {
                          "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "analysisEndDate": {
                          "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "example": {
                    "number": 1,
                    "dateCreated": "2017-09-27T18:21:44.000Z",
                    "dateUpdated": "2017-09-27T18:21:44.000Z",
                    "createdBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "lastUpdatedBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "type": "note",
                    "status": "completed",
                    "text": "Need to investigate target host",
                    "pinned": true,
                    "datePinned": "2017-09-27T18:21:44.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/note/": {
      "x-swagger-router-controller": "evidence",
      "post": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "createNote",
        "description": "Add a note as evidence on a case.",
        "summary": "Add Note Evidence",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Note text.",
                    "maxLength": 20000,
                    "minLength": 1
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the newly added note as evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the evidence.",
                      "type": "integer",
                      "example": 1
                    },
                    "dateCreated": {
                      "description": "When the evidence was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "type": {
                      "description": "The type of evidence.",
                      "type": "string",
                      "enum": [
                        "note",
                        "file",
                        "log",
                        "alarm",
                        "userEvents",
                        "unknown"
                      ]
                    },
                    "status": {
                      "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "statusMessage": {
                      "description": "If adding evidence failed, describes the failure reason.",
                      "type": "string",
                      "example": null,
                      "nullable": true
                    },
                    "text": {
                      "description": "Note describing the evidence.",
                      "type": "string",
                      "example": "Need to investigate target host"
                    },
                    "pinned": {
                      "description": "Whether the evidence is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "file": {
                      "description": "Properties of the file uploaded as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the uploaded file.",
                          "type": "string",
                          "example": "instructions.pdf"
                        },
                        "size": {
                          "description": "Size of the file in bytes.",
                          "type": "integer",
                          "example": 1024
                        }
                      },
                      "nullable": true
                    },
                    "alarm": {
                      "description": "Properties of the alarm added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "alarmId": {
                          "description": "Unique, numeric identifier for the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmDate": {
                          "description": "When the alarm fired, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "alarmRuleId": {
                          "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmRuleName": {
                          "description": "Name of the rule that fired the alarm.",
                          "type": "string",
                          "example": "Compromised System Detected"
                        },
                        "dateInserted": {
                          "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "entityId": {
                          "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                          "type": "integer",
                          "example": 1
                        },
                        "entityName": {
                          "description": "Name of the entity with which the alarm is associated.",
                          "type": "string",
                          "example": "Primary Entity"
                        },
                        "riskBasedPriorityMax": {
                          "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        }
                      },
                      "nullable": true
                    },
                    "logs": {
                      "description": "Properties of the log set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "logCount": {
                          "description": "Number of logs in the set.",
                          "type": "integer",
                          "example": 100
                        },
                        "query": {
                          "description": "Query used to add logs as evidence.",
                          "type": "string",
                          "example": "messageId:(744280 OR 728289)",
                          "nullable": true
                        },
                        "searchIndexId": {
                          "description": "Id of the index containing the log data.",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "userEvents": {
                      "description": "Properties of the user event set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "identityId": {
                          "description": "The unique identifier of the user identity for the added events.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": 1
                        },
                        "score": {
                          "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        },
                        "eventCount": {
                          "description": "The number of events in the set.",
                          "type": "integer",
                          "example": 15
                        },
                        "analysisStartDate": {
                          "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "analysisEndDate": {
                          "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "example": {
                    "number": 1,
                    "dateCreated": "2017-09-27T18:21:44.000Z",
                    "dateUpdated": "2017-09-27T18:21:44.000Z",
                    "createdBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "lastUpdatedBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "type": "note",
                    "status": "completed",
                    "text": "Need to investigate target host",
                    "pinned": true,
                    "datePinned": "2017-09-27T18:21:44.000Z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/{number}/": {
      "x-swagger-router-controller": "evidence",
      "get": {
        "tags": [
          "Case Evidence"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "number",
            "description": "Unique, numeric identifier for the evidence.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getEvidence",
        "summary": "Get Evidence",
        "description": "Return a summary of an item of evidence on a case.",
        "responses": {
          "200": {
            "description": "Returns the a summary of the requested evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the evidence.",
                      "type": "integer",
                      "example": 1
                    },
                    "dateCreated": {
                      "description": "When the evidence was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "type": {
                      "description": "The type of evidence.",
                      "type": "string",
                      "enum": [
                        "note",
                        "file",
                        "log",
                        "alarm",
                        "userEvents",
                        "unknown"
                      ]
                    },
                    "status": {
                      "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "statusMessage": {
                      "description": "If adding evidence failed, describes the failure reason.",
                      "type": "string",
                      "example": null,
                      "nullable": true
                    },
                    "text": {
                      "description": "Note describing the evidence.",
                      "type": "string",
                      "example": "Need to investigate target host"
                    },
                    "pinned": {
                      "description": "Whether the evidence is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "file": {
                      "description": "Properties of the file uploaded as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the uploaded file.",
                          "type": "string",
                          "example": "instructions.pdf"
                        },
                        "size": {
                          "description": "Size of the file in bytes.",
                          "type": "integer",
                          "example": 1024
                        }
                      },
                      "nullable": true
                    },
                    "alarm": {
                      "description": "Properties of the alarm added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "alarmId": {
                          "description": "Unique, numeric identifier for the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmDate": {
                          "description": "When the alarm fired, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "alarmRuleId": {
                          "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmRuleName": {
                          "description": "Name of the rule that fired the alarm.",
                          "type": "string",
                          "example": "Compromised System Detected"
                        },
                        "dateInserted": {
                          "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "entityId": {
                          "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                          "type": "integer",
                          "example": 1
                        },
                        "entityName": {
                          "description": "Name of the entity with which the alarm is associated.",
                          "type": "string",
                          "example": "Primary Entity"
                        },
                        "riskBasedPriorityMax": {
                          "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        }
                      },
                      "nullable": true
                    },
                    "logs": {
                      "description": "Properties of the log set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "logCount": {
                          "description": "Number of logs in the set.",
                          "type": "integer",
                          "example": 100
                        },
                        "query": {
                          "description": "Query used to add logs as evidence.",
                          "type": "string",
                          "example": "messageId:(744280 OR 728289)",
                          "nullable": true
                        },
                        "searchIndexId": {
                          "description": "Id of the index containing the log data.",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "userEvents": {
                      "description": "Properties of the user event set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "identityId": {
                          "description": "The unique identifier of the user identity for the added events.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": 1
                        },
                        "score": {
                          "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        },
                        "eventCount": {
                          "description": "The number of events in the set.",
                          "type": "integer",
                          "example": 15
                        },
                        "analysisStartDate": {
                          "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "analysisEndDate": {
                          "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "example": {
                    "number": 1,
                    "dateCreated": "2017-09-27T18:21:44.000Z",
                    "dateUpdated": "2017-09-27T18:21:44.000Z",
                    "createdBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "lastUpdatedBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "type": "note",
                    "status": "completed",
                    "text": "Need to investigate target host",
                    "pinned": true,
                    "datePinned": "2017-09-27T18:21:44.000Z"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case Evidence"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "number",
            "description": "Unique, numeric identifier for the evidence.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Note text of evidence."
                  },
                  "pinned": {
                    "type": "boolean",
                    "description": "Pinned status of evidence."
                  }
                }
              }
            }
          },
          "description": "Update an item of evidence on a case.",
          "required": true
        },
        "operationId": "updateEvidence",
        "summary": "Update Evidence",
        "description": "Update an item of evidence on a case.",
        "responses": {
          "200": {
            "description": "Returns the updated evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the evidence.",
                      "type": "integer",
                      "example": 1
                    },
                    "dateCreated": {
                      "description": "When the evidence was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the evidence.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "type": {
                      "description": "The type of evidence.",
                      "type": "string",
                      "enum": [
                        "note",
                        "file",
                        "log",
                        "alarm",
                        "userEvents",
                        "unknown"
                      ]
                    },
                    "status": {
                      "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "statusMessage": {
                      "description": "If adding evidence failed, describes the failure reason.",
                      "type": "string",
                      "example": null,
                      "nullable": true
                    },
                    "text": {
                      "description": "Note describing the evidence.",
                      "type": "string",
                      "example": "Need to investigate target host"
                    },
                    "pinned": {
                      "description": "Whether the evidence is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "file": {
                      "description": "Properties of the file uploaded as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the uploaded file.",
                          "type": "string",
                          "example": "instructions.pdf"
                        },
                        "size": {
                          "description": "Size of the file in bytes.",
                          "type": "integer",
                          "example": 1024
                        }
                      },
                      "nullable": true
                    },
                    "alarm": {
                      "description": "Properties of the alarm added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "alarmId": {
                          "description": "Unique, numeric identifier for the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmDate": {
                          "description": "When the alarm fired, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "alarmRuleId": {
                          "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                          "type": "integer",
                          "example": 1
                        },
                        "alarmRuleName": {
                          "description": "Name of the rule that fired the alarm.",
                          "type": "string",
                          "example": "Compromised System Detected"
                        },
                        "dateInserted": {
                          "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "entityId": {
                          "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                          "type": "integer",
                          "example": 1
                        },
                        "entityName": {
                          "description": "Name of the entity with which the alarm is associated.",
                          "type": "string",
                          "example": "Primary Entity"
                        },
                        "riskBasedPriorityMax": {
                          "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        }
                      },
                      "nullable": true
                    },
                    "logs": {
                      "description": "Properties of the log set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "logCount": {
                          "description": "Number of logs in the set.",
                          "type": "integer",
                          "example": 100
                        },
                        "query": {
                          "description": "Query used to add logs as evidence.",
                          "type": "string",
                          "example": "messageId:(744280 OR 728289)",
                          "nullable": true
                        },
                        "searchIndexId": {
                          "description": "Id of the index containing the log data.",
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "userEvents": {
                      "description": "Properties of the user event set added as evidence.",
                      "x-omitempty": true,
                      "type": "object",
                      "properties": {
                        "identityId": {
                          "description": "The unique identifier of the user identity for the added events.",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255,
                          "example": 1
                        },
                        "score": {
                          "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                          "type": "integer",
                          "example": 85
                        },
                        "eventCount": {
                          "description": "The number of events in the set.",
                          "type": "integer",
                          "example": 15
                        },
                        "analysisStartDate": {
                          "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "analysisEndDate": {
                          "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "nullable": true
                    }
                  },
                  "example": {
                    "number": 1,
                    "dateCreated": "2017-09-27T18:21:44.000Z",
                    "dateUpdated": "2017-09-27T18:21:44.000Z",
                    "createdBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "lastUpdatedBy": {
                      "number": 1,
                      "name": "John Smith"
                    },
                    "type": "note",
                    "status": "completed",
                    "text": "Need to investigate target host",
                    "pinned": true,
                    "datePinned": "2017-09-27T18:21:44.000Z"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "deleteEvidence",
        "summary": "Delete Evidence",
        "description": "Remove an item of evidence from a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "number",
            "description": "Unique, numeric identifier for the evidence.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No body is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/{number}/progress/": {
      "x-swagger-router-controller": "evidence",
      "get": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "getProgress",
        "summary": "Get Evidence Progress",
        "description": "Return the progress of a pending item of evidence (for example, a file upload).",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "number",
            "description": "Unique, numeric identifier for the evidence.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the progress of a pending item of evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "bytesTransferred": {
                      "description": "The number of bytes that have been processed and written to the backing store. Only applicable for file evidence.",
                      "type": "integer",
                      "x-omitempty": true,
                      "nullable": true
                    },
                    "status": {
                      "description": "The current processing status of the evidence. Only applicable for file evidence.",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/{number}/download/": {
      "x-swagger-router-controller": "evidence",
      "get": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "downloadFile",
        "summary": "Download File Evidence",
        "description": "Download an item of file evidence from a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "number",
            "description": "Unique, numeric identifier for the evidence.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the downloaded file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/{number}/logs-bytes/": {
      "x-swagger-router-controller": "evidence",
      "get": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "getLogsBytes",
        "summary": "Get Evidence Logs Bytes",
        "description": "Return logs bytes of an item of log evidence on a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "number",
            "description": "Unique, numeric identifier for the evidence.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the logs bytes of a log evidence.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The logs bytes of a log evidence.",
                  "type": "object",
                  "properties": {
                    "bytes": {
                      "description": "The logs bytes of an item of log evidence, as a gzipped and base64-encoded string.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/evidence/{number}/userEvents/": {
      "x-swagger-router-controller": "evidence",
      "get": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "listUserEventsEvidence",
        "summary": "List User Events",
        "description": "Return the list of user events added as evidence on a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "number",
            "description": "Unique, numeric identifier for the evidence.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user events associated as evidence with the case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/logs-index/": {
      "x-swagger-router-controller": "evidence",
      "get": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "getLogsIndex",
        "summary": "Get Logs Index",
        "description": "Get the index of log evidence for a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the status of the log index for this case.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The status of a logs index for a case.",
                  "type": "object",
                  "properties": {
                    "indexId": {
                      "description": "The unique ID of the logs index.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "state": {
                      "description": "The state of the logs index.",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "ready",
                        "rebuilding",
                        "error",
                        "archived"
                      ],
                      "example": "ready"
                    },
                    "message": {
                      "description": "Information regarding the status of the logs index.",
                      "type": "string",
                      "example": "The logs index is ready to use."
                    },
                    "dateCreated": {
                      "description": "When the logs index was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the logs index was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateRebuilt": {
                      "description": "When the logs index was unarchived, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the logs index.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case Evidence"
        ],
        "operationId": "updateLogsIndex",
        "summary": "Update Logs Index",
        "description": "Update the index of log evidence for a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "state"
                ],
                "properties": {
                  "state": {
                    "type": "string",
                    "enum": [
                      "rebuilding",
                      "archived"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the status of the log index for this case.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The status of a logs index for a case.",
                  "type": "object",
                  "properties": {
                    "indexId": {
                      "description": "The unique ID of the logs index.",
                      "type": "string",
                      "format": "uuid",
                      "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                    },
                    "state": {
                      "description": "The state of the logs index.",
                      "type": "string",
                      "enum": [
                        "unknown",
                        "ready",
                        "rebuilding",
                        "error",
                        "archived"
                      ],
                      "example": "ready"
                    },
                    "message": {
                      "description": "Information regarding the status of the logs index.",
                      "type": "string",
                      "example": "The logs index is ready to use."
                    },
                    "dateCreated": {
                      "description": "When the logs index was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the logs index was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateRebuilt": {
                      "description": "When the logs index was unarchived, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the logs index.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/playbooks/": {
      "x-swagger-router-controller": "playbookOnCase",
      "get": {
        "tags": [
          "Case Playbooks"
        ],
        "operationId": "listPlaybooksOnCase",
        "summary": "List Playbooks",
        "description": "Return a list of playbooks attached to a case.",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of playbooks attached to a case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "2CDC171A-6AF3-451B-BDAB-73C083E50698"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the playbook.",
                        "minLength": 1,
                        "maxLength": 150,
                        "example": "System Compromise"
                      },
                      "description": {
                        "description": "Summary of the playbook.",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Procedures for a potential system compromise. More details at http://example.com/."
                      },
                      "originalPlaybookId": {
                        "description": "Unique identifier for the original playbook, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "23362E57-FE85-449C-9973-968EE319BF98"
                      },
                      "dateAdded": {
                        "description": "When the playbook was added to the case, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateUpdated": {
                        "description": "When the playbook on the case was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastUpdatedBy": {
                        "description": "Last user to update the playbook on the case.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "pinned": {
                        "description": "Whether the playbook is pinned.",
                        "type": "boolean",
                        "example": true
                      },
                      "datePinned": {
                        "description": "When the playbook was pinned, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-09-27T18:21:44.000Z",
                        "nullable": true
                      },
                      "procedures": {
                        "description": "Information about procedures on the playbook attached to a case.",
                        "type": "object",
                        "properties": {
                          "total": {
                            "description": "Total number of procedures on the playbook.",
                            "type": "integer",
                            "example": 10
                          },
                          "notCompleted": {
                            "description": "Total number of procedures on the playbook that have not been completed.",
                            "type": "integer",
                            "example": 2
                          },
                          "completed": {
                            "description": "Total number of procedures on the playbook that have been completed.",
                            "type": "integer",
                            "example": 3
                          },
                          "skipped": {
                            "description": "Total number of procedures on the playbook that have been skipped.",
                            "type": "integer",
                            "example": 5
                          },
                          "pastDue": {
                            "description": "Total number of incomplete procedures on the playbook that are past due.",
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Case Playbooks"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                    "type": "string",
                    "format": "uuid",
                    "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                  }
                }
              }
            }
          },
          "required": true
        },
        "operationId": "addPlaybook",
        "summary": "Add Playbook",
        "description": "Add a playbook to case.",
        "responses": {
          "200": {
            "description": "Returns the added playbook.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "2CDC171A-6AF3-451B-BDAB-73C083E50698"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "originalPlaybookId": {
                      "description": "Unique identifier for the original playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "23362E57-FE85-449C-9973-968EE319BF98"
                    },
                    "dateAdded": {
                      "description": "When the playbook was added to the case, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook on the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook on the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "pinned": {
                      "description": "Whether the playbook is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the playbook was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-09-27T18:21:44.000Z",
                      "nullable": true
                    },
                    "procedures": {
                      "description": "Information about procedures on the playbook attached to a case.",
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total number of procedures on the playbook.",
                          "type": "integer",
                          "example": 10
                        },
                        "notCompleted": {
                          "description": "Total number of procedures on the playbook that have not been completed.",
                          "type": "integer",
                          "example": 2
                        },
                        "completed": {
                          "description": "Total number of procedures on the playbook that have been completed.",
                          "type": "integer",
                          "example": 3
                        },
                        "skipped": {
                          "description": "Total number of procedures on the playbook that have been skipped.",
                          "type": "integer",
                          "example": 5
                        },
                        "pastDue": {
                          "description": "Total number of incomplete procedures on the playbook that are past due.",
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Error returned when the playbook already exists on the case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "description": "HTTP Status Code",
                      "type": "integer"
                    },
                    "message": {
                      "description": "A short, human-readable summary of the problem that does not change from occurrence to occurrence.",
                      "type": "string"
                    },
                    "details": {
                      "description": "A human-readable explanation specific to this occurrence of the problem.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/playbooks/{pid}/": {
      "x-swagger-router-controller": "playbookOnCase",
      "get": {
        "tags": [
          "Case Playbooks"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "operationId": "getPlaybookOnCase",
        "summary": "Get Playbook",
        "description": "Return a playbook on a case.",
        "responses": {
          "200": {
            "description": "Returns the requested playbook.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "2CDC171A-6AF3-451B-BDAB-73C083E50698"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "originalPlaybookId": {
                      "description": "Unique identifier for the original playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "23362E57-FE85-449C-9973-968EE319BF98"
                    },
                    "dateAdded": {
                      "description": "When the playbook was added to the case, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook on the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook on the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "pinned": {
                      "description": "Whether the playbook is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the playbook was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-09-27T18:21:44.000Z",
                      "nullable": true
                    },
                    "procedures": {
                      "description": "Information about procedures on the playbook attached to a case.",
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total number of procedures on the playbook.",
                          "type": "integer",
                          "example": 10
                        },
                        "notCompleted": {
                          "description": "Total number of procedures on the playbook that have not been completed.",
                          "type": "integer",
                          "example": 2
                        },
                        "completed": {
                          "description": "Total number of procedures on the playbook that have been completed.",
                          "type": "integer",
                          "example": 3
                        },
                        "skipped": {
                          "description": "Total number of procedures on the playbook that have been skipped.",
                          "type": "integer",
                          "example": 5
                        },
                        "pastDue": {
                          "description": "Total number of incomplete procedures on the playbook that are past due.",
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case Playbooks"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pinned": {
                    "description": "Pinned status of the playbook on the case.",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "description": "Values to update on the playbook on the case.",
          "required": true
        },
        "operationId": "updatePlaybookOnCase",
        "summary": "Update Playbook",
        "description": "Update a playbook on a case.",
        "responses": {
          "200": {
            "description": "Returns the updated playbook.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "2CDC171A-6AF3-451B-BDAB-73C083E50698"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "originalPlaybookId": {
                      "description": "Unique identifier for the original playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "23362E57-FE85-449C-9973-968EE319BF98"
                    },
                    "dateAdded": {
                      "description": "When the playbook was added to the case, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook on the case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook on the case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "pinned": {
                      "description": "Whether the playbook is pinned.",
                      "type": "boolean",
                      "example": true
                    },
                    "datePinned": {
                      "description": "When the playbook was pinned, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-09-27T18:21:44.000Z",
                      "nullable": true
                    },
                    "procedures": {
                      "description": "Information about procedures on the playbook attached to a case.",
                      "type": "object",
                      "properties": {
                        "total": {
                          "description": "Total number of procedures on the playbook.",
                          "type": "integer",
                          "example": 10
                        },
                        "notCompleted": {
                          "description": "Total number of procedures on the playbook that have not been completed.",
                          "type": "integer",
                          "example": 2
                        },
                        "completed": {
                          "description": "Total number of procedures on the playbook that have been completed.",
                          "type": "integer",
                          "example": 3
                        },
                        "skipped": {
                          "description": "Total number of procedures on the playbook that have been skipped.",
                          "type": "integer",
                          "example": 5
                        },
                        "pastDue": {
                          "description": "Total number of incomplete procedures on the playbook that are past due.",
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Case Playbooks"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "operationId": "removePlaybook",
        "summary": "Remove Playbook",
        "description": "Remove a playbook from a case.",
        "responses": {
          "204": {
            "description": "No body is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/playbooks/{pid}/procedures/": {
      "x-swagger-router-controller": "procedureOnCase",
      "get": {
        "tags": [
          "Case Playbook Procedures"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ordering",
                "dateUpdated",
                "dueDate",
                "name"
              ],
              "default": "ordering"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "name",
            "description": "Filter results that have the specified name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "description": "Filter results that have the specified description.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "Filter results that have the specified procedure status.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NotCompleted",
                  "Completed",
                  "Skipped"
                ]
              }
            }
          },
          {
            "name": "assignee",
            "description": "Filter results that have a specific procedure assignee, by person numbers. Note that you can specify the literal value `null` to filter for unassigned procedures.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "nullable": true
              }
            }
          }
        ],
        "operationId": "listProceduresOnCase",
        "summary": "List Procedures",
        "description": "Return a list of procedures on a playbook on a case.",
        "responses": {
          "200": {
            "description": "Returns the procedures of a specific playbook on a case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "83FEE80B-998E-467B-B554-84922D8EB908"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the procedure.",
                        "minLength": 1,
                        "maxLength": 150,
                        "example": "Notify HR"
                      },
                      "description": {
                        "description": "Detailed information on the procedure.",
                        "type": "string",
                        "maxLength": 4000,
                        "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                      },
                      "assignee": {
                        "description": "Person the procedure is assigned to.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        },
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the procedure.",
                        "enum": [
                          "NotCompleted",
                          "Completed",
                          "Skipped"
                        ],
                        "example": "Completed"
                      },
                      "dueDate": {
                        "description": "When the procedure is due, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "notes": {
                        "description": "Notes about the procedure.",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Sent email to Sarah. Awaiting reply."
                      },
                      "dateUpdated": {
                        "description": "When the procedure on the playbook added to a case was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastUpdatedBy": {
                        "description": "Last person to update the procedure on the playbook added to a case.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/playbooks/{pid}/procedures/{prid}/": {
      "x-swagger-router-controller": "procedureOnCase",
      "get": {
        "tags": [
          "Case Playbook Procedures"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prid",
            "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "operationId": "getProcedureOnCase",
        "summary": "Get Procedure",
        "description": "Return a procedure on a playbook on a case.",
        "responses": {
          "200": {
            "description": "Returns the procedure on a playbook on a case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "83FEE80B-998E-467B-B554-84922D8EB908"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the procedure.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "Notify HR"
                    },
                    "description": {
                      "description": "Detailed information on the procedure.",
                      "type": "string",
                      "maxLength": 4000,
                      "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                    },
                    "assignee": {
                      "description": "Person the procedure is assigned to.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the procedure.",
                      "enum": [
                        "NotCompleted",
                        "Completed",
                        "Skipped"
                      ],
                      "example": "Completed"
                    },
                    "dueDate": {
                      "description": "When the procedure is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "notes": {
                      "description": "Notes about the procedure.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Sent email to Sarah. Awaiting reply."
                    },
                    "dateUpdated": {
                      "description": "When the procedure on the playbook added to a case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last person to update the procedure on the playbook added to a case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case Playbook Procedures"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prid",
            "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignee": {
                    "description": "Unique, numeric identifier for the person to which procedure is assigned.",
                    "type": "integer",
                    "example": 1,
                    "nullable": true
                  },
                  "notes": {
                    "description": "Notes about the procedure.",
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Sent email to Sarah. Awaiting reply."
                  },
                  "dueDate": {
                    "description": "When the procedure is due, as an RFC 3339 formatted string.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the procedure.",
                    "enum": [
                      "NotCompleted",
                      "Completed",
                      "Skipped"
                    ],
                    "example": "Completed"
                  }
                }
              }
            }
          },
          "required": true
        },
        "operationId": "updateProcedureOnCase",
        "summary": "Update Procedure",
        "description": "Update a procedure on a playbook on a case. For example, update the due date or status of a procedure.",
        "responses": {
          "200": {
            "description": "Returns the updated procedure.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "83FEE80B-998E-467B-B554-84922D8EB908"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the procedure.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "Notify HR"
                    },
                    "description": {
                      "description": "Detailed information on the procedure.",
                      "type": "string",
                      "maxLength": 4000,
                      "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                    },
                    "assignee": {
                      "description": "Person the procedure is assigned to.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the procedure.",
                      "enum": [
                        "NotCompleted",
                        "Completed",
                        "Skipped"
                      ],
                      "example": "Completed"
                    },
                    "dueDate": {
                      "description": "When the procedure is due, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "notes": {
                      "description": "Notes about the procedure.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Sent email to Sarah. Awaiting reply."
                    },
                    "dateUpdated": {
                      "description": "When the procedure on the playbook added to a case was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last person to update the procedure on the playbook added to a case.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/playbooks/{pid}/files/": {
      "x-swagger-router-controller": "playbookOnCase",
      "get": {
        "tags": [
          "Case Playbook Attachments"
        ],
        "operationId": "listPlaybookOnCaseAttachmentsMetadata",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dateUpdated",
                "name"
              ],
              "default": "name"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "summary": "List Attachments",
        "description": "Return all attachments for a playbook on a case.",
        "responses": {
          "200": {
            "description": "Returns a list of playbook attachment file metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the file upload, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "fc6efecb-e78f-4d07-ab4e-25c655a75e55"
                      },
                      "dateCreated": {
                        "description": "When the metadata was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "dateUpdated": {
                        "description": "When the metadata was updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastUpdatedBy": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "status": {
                        "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
                        "type": "string",
                        "enum": [
                          "pending",
                          "completed",
                          "failed",
                          "unknown"
                        ],
                        "example": "completed"
                      },
                      "name": {
                        "description": "Name of the uploaded file.",
                        "type": "string",
                        "example": "instructions.pdf"
                      },
                      "size": {
                        "description": "Size of the uploaded file in bytes.",
                        "type": "integer",
                        "example": 1024
                      },
                      "mimeType": {
                        "description": "MIME type of the uploaded file.",
                        "type": "string",
                        "maxLength": 127,
                        "example": "application/pdf"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/playbooks/{pid}/files/{fid}/": {
      "x-swagger-router-controller": "playbookOnCase",
      "get": {
        "tags": [
          "Case Playbook Attachments"
        ],
        "operationId": "getPlaybookOnCaseAttachmentMetadata",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fid",
            "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "summary": "Get Attachment",
        "description": "Return an attachment for a playbook on a case.",
        "responses": {
          "200": {
            "description": "Returns the playbook attachment file metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the file upload, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "fc6efecb-e78f-4d07-ab4e-25c655a75e55"
                    },
                    "dateCreated": {
                      "description": "When the metadata was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "dateUpdated": {
                      "description": "When the metadata was updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "status": {
                      "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "name": {
                      "description": "Name of the uploaded file.",
                      "type": "string",
                      "example": "instructions.pdf"
                    },
                    "size": {
                      "description": "Size of the uploaded file in bytes.",
                      "type": "integer",
                      "example": 1024
                    },
                    "mimeType": {
                      "description": "MIME type of the uploaded file.",
                      "type": "string",
                      "maxLength": 127,
                      "example": "application/pdf"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/playbooks/{pid}/files/{fid}/contents/": {
      "x-swagger-router-controller": "playbookOnCase",
      "get": {
        "tags": [
          "Case Playbook Attachments"
        ],
        "operationId": "downloadPlaybookOnCaseAttachment",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fid",
            "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "summary": "Download Attachment",
        "description": "Download a file attachment for a playbook on a case.",
        "responses": {
          "200": {
            "description": "Returns the downloaded file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/case-procedures/": {
      "x-swagger-router-controller": "proceduresOnAllCases",
      "get": {
        "tags": [
          "Case Playbook Procedures"
        ],
        "summary": "List Procedures (All Cases)",
        "description": "Return a filtered list of procedure information on all cases. Supports pagination.",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dateUpdated",
                "dueDate",
                "name",
                "status",
                "caseName",
                "caseNumber",
                "caseDueDate"
              ],
              "default": "dateUpdated"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "name",
            "description": "Filter results that have the specified name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "Filter results that have the specified procedure status.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NotCompleted",
                  "Completed",
                  "Skipped"
                ]
              }
            }
          },
          {
            "name": "assignee",
            "description": "Filter results that have a specific procedure assignee, by person numbers. Note that you can specify the literal value `null` to filter for unassigned procedures.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "nullable": true
              }
            }
          },
          {
            "name": "dueBefore",
            "description": "Filter results that have a procedure due date before the specified date. Must be an RFC 3339 formatted string.",
            "in": "query",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dueAfter",
            "description": "Filter results that have a procedure due date after the specified date. Must be an RFC 3339 formatted string.",
            "in": "query",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "caseNumber",
            "description": "Filter results by case numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "caseName",
            "description": "Filter results that have a case name that contains the specified value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "caseDueBefore",
            "description": "Filter results that have a case due date before the specified date. Must be an RFC 3339 formatted string.",
            "in": "query",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "caseDueAfter",
            "description": "Filter results that have a case due date after the specified date. Must be an RFC 3339 formatted string.",
            "in": "query",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "priority",
            "description": "Filter results that have a specific case priority.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ]
              }
            }
          },
          {
            "name": "statusNumber",
            "description": "Filter results that have a specific case status.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ]
              }
            }
          },
          {
            "name": "ownerNumber",
            "description": "Filter results that have a specific case owner, by person numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "collaboratorNumber",
            "description": "Filter results that have a specific case collaborator, by person number.",
            "in": "query",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagNumber",
            "description": "Filter results that are tagged, by tag numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "operationId": "listProceduresOnAllCases",
        "responses": {
          "200": {
            "description": "Returns the filtered procedure information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "83FEE80B-998E-467B-B554-84922D8EB908"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the procedure.",
                        "minLength": 1,
                        "maxLength": 150,
                        "example": "Notify HR"
                      },
                      "description": {
                        "description": "Detailed information on the procedure.",
                        "type": "string",
                        "maxLength": 4000,
                        "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                      },
                      "assignee": {
                        "description": "Person the procedure is assigned to.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        },
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the procedure.",
                        "enum": [
                          "NotCompleted",
                          "Completed",
                          "Skipped"
                        ],
                        "example": "Completed"
                      },
                      "dueDate": {
                        "description": "When the procedure is due, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "notes": {
                        "description": "Notes about the procedure.",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Sent email to Sarah. Awaiting reply."
                      },
                      "dateUpdated": {
                        "description": "When the procedure on the playbook added to a case was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastUpdatedBy": {
                        "description": "Last person to update the procedure on the playbook added to a case.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "casePlaybook": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
                            "type": "string",
                            "format": "uuid",
                            "example": "2CDC171A-6AF3-451B-BDAB-73C083E50698"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the playbook.",
                            "minLength": 1,
                            "maxLength": 150,
                            "example": "System Compromise"
                          }
                        }
                      },
                      "case": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                            "type": "string",
                            "format": "uuid",
                            "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                          },
                          "number": {
                            "description": "Unique, numeric identifier for the case.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the case.",
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "System Compromise"
                          },
                          "dueDate": {
                            "description": "When the case is due, as an RFC 3339 formatted string.",
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Priority of the case.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ],
                            "example": 1
                          },
                          "status": {
                            "description": "Status of the case.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Display name of the status.",
                                "enum": [
                                  "Created",
                                  "Completed",
                                  "Incident",
                                  "Mitigated",
                                  "Resolved"
                                ],
                                "example": "Mitigated"
                              },
                              "number": {
                                "type": "integer",
                                "description": "Numeric identifier of the status.",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ],
                                "example": 4
                              }
                            }
                          },
                          "owner": {
                            "description": "Current owner of the case.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Unique, numeric identifier for the person.",
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "description": "Name of the person.",
                                "type": "string",
                                "example": "John Smith"
                              },
                              "disabled": {
                                "description": "If the person is disabled in the system.",
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logs-indexes/": {
      "x-swagger-router-controller": "logsIndexesOnAllCases",
      "get": {
        "tags": [
          "Logs Indexes",
          "Case Evidence"
        ],
        "summary": "List Logs Indexes (All Cases)",
        "description": "Return a filtered list of logs indexes for all cases. Can only be accessed by global administrators.  Supports pagination.",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dateCreated",
                "dateUpdated"
              ],
              "default": "dateUpdated"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "updatedAfter",
            "description": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "description": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "state",
            "description": "Filter results that have the specified logs index state.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "rebuilding",
                  "ready",
                  "archived",
                  "error"
                ]
              }
            }
          }
        ],
        "operationId": "listLogsIndexesOnAllCases",
        "responses": {
          "200": {
            "description": "Returns the filtered logs index information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "The status of a logs index for a case.",
                    "type": "object",
                    "properties": {
                      "indexId": {
                        "description": "The unique ID of the logs index.",
                        "type": "string",
                        "format": "uuid",
                        "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                      },
                      "state": {
                        "description": "The state of the logs index.",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "ready",
                          "rebuilding",
                          "error",
                          "archived"
                        ],
                        "example": "ready"
                      },
                      "message": {
                        "description": "Information regarding the status of the logs index.",
                        "type": "string",
                        "example": "The logs index is ready to use."
                      },
                      "dateCreated": {
                        "description": "When the logs index was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateUpdated": {
                        "description": "When the logs index was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateRebuilt": {
                        "description": "When the logs index was unarchived, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "lastUpdatedBy": {
                        "description": "Last user to update the logs index.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/": {
      "x-swagger-router-controller": "tags",
      "get": {
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "tag",
            "description": "Filter results that have a tag name that contains the specified value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "getTags",
        "summary": "List Tags",
        "description": "Return a list of tags. Supports pagination.",
        "responses": {
          "200": {
            "description": "Returns a tag.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "description": "Unique, numeric identifier for the tag.",
                        "type": "integer",
                        "example": 1
                      },
                      "text": {
                        "type": "string",
                        "description": "The text of the tag.",
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "System"
                      },
                      "dateCreated": {
                        "description": "When the tag was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "description": "User that created the tag.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "createTag",
        "summary": "Create Tag",
        "description": "Create a new tag.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "text"
                ],
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The text of the tag.",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "System"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the newly created tag.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the tag.",
                      "type": "integer",
                      "example": 1
                    },
                    "text": {
                      "type": "string",
                      "description": "The text of the tag.",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "System"
                    },
                    "dateCreated": {
                      "description": "When the tag was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the tag.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/{number}/": {
      "x-swagger-router-controller": "tags",
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "getTagByNumber",
        "summary": "Get Tag",
        "description": "Return a tag.",
        "parameters": [
          {
            "name": "number",
            "description": "Unique, numeric identifier for the tag.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified tag.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the tag.",
                      "type": "integer",
                      "example": 1
                    },
                    "text": {
                      "type": "string",
                      "description": "The text of the tag.",
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "System"
                    },
                    "dateCreated": {
                      "description": "When the tag was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "description": "User that created the tag.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "deleteTag",
        "summary": "Delete Tag",
        "description": "Delete a tag. The tag is removed from any cases to which it had been added.",
        "parameters": [
          {
            "name": "number",
            "description": "Unique, numeric identifier for the tag.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No body is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/history/": {
      "x-swagger-router-controller": "history",
      "get": {
        "tags": [
          "Global History"
        ],
        "operationId": "listHistory",
        "summary": "List Global History *",
        "description": "Return the global case history. Supports pagination.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "actionDate"
              ],
              "default": "actionDate"
            }
          },
          {
            "name": "createdAfter",
            "description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of history for all cases.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the history, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "9484cd8c-333d-4919-ad07-cb92c1abea2b"
                      },
                      "date": {
                        "description": "When the history was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "actor": {
                        "description": "The user that took action, creating the history.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "action": {
                        "description": "The type of action that created the history.",
                        "type": "string",
                        "example": "UpdateCase"
                      },
                      "resources": {
                        "description": "Resources created or otherwise involved in the action that created the history.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Unique identifier for the resource, as an RFC 4122 formatted string.",
                              "type": "string",
                              "format": "uuid",
                              "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                            },
                            "type": {
                              "description": "The resource type.",
                              "type": "string",
                              "example": "Case"
                            },
                            "displayName": {
                              "description": "The name of the resource.",
                              "type": "string",
                              "example": "System Compromise"
                            },
                            "retired": {
                              "description": "Whether the resource has been retired or is still active.",
                              "type": "boolean",
                              "x-omitempty": true,
                              "example": false,
                              "nullable": true
                            },
                            "properties": {
                              "description": "A set of properties describing what changed in the resource.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the resource property.",
                                    "type": "string",
                                    "example": "summary"
                                  },
                                  "from": {
                                    "description": "The value of the property prior being changed.",
                                    "type": "object",
                                    "example": ""
                                  },
                                  "to": {
                                    "description": "The value of the property after being changed.",
                                    "type": "object",
                                    "example": "Investigated a potential system compromise. More details at http://example.com/."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "id": "42FA09B8-CA87-46F3-A6B8-6155FDA7E872",
                      "date": "2017-08-30T18:24:37.080Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateLogEvidence",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": []
                        },
                        {
                          "id": "evidence:886",
                          "type": "logEvidence",
                          "displayName": null,
                          "retired": false,
                          "properties": [
                            {
                              "name": "text",
                              "from": null,
                              "to": "test"
                            },
                            {
                              "name": "logCount",
                              "from": null,
                              "to": "1"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "52A8F9B0-3022-4FC3-A58E-99E67E2FE5C1",
                      "date": "2017-09-27T18:55:57.386Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "UploadFile",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": []
                        },
                        {
                          "id": "evidence:1018",
                          "type": "fileEvidence",
                          "displayName": "instructions.pdf",
                          "retired": false,
                          "properties": [
                            {
                              "name": "filename",
                              "from": null,
                              "to": "instructions.pdf"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "37184C3C-8284-4B15-A8A1-BFC3137D7288",
                      "date": "2017-09-27T18:55:54.138Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateAlarmEvidence",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": [
                            {
                              "name": "earliestEvidenceDate",
                              "from": null,
                              "to": "2017-09-22 20:51:32.23 +0000 UTC"
                            }
                          ]
                        },
                        {
                          "id": "evidence:1017",
                          "type": "alarmEvidence",
                          "displayName": "Compromise - All",
                          "retired": false,
                          "properties": [
                            {
                              "name": "alarm",
                              "from": null,
                              "to": {
                                "alarmId": 57887,
                                "alarmDate": "2017-09-22T20:51:32.230Z",
                                "alarmRuleId": 1000000001,
                                "alarmRuleName": "Compromise - All",
                                "dateInserted": "2017-09-22T20:51:32.590Z",
                                "entityId": 1,
                                "entityName": "Primary Site",
                                "riskBasedPriorityMax": 9
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "1A08C84F-23FB-4F10-B4B6-E0CEF29A432A",
                      "date": "2017-09-27T18:55:19.434Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateNoteEvidence",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": []
                        },
                        {
                          "id": "evidence:1016",
                          "type": "noteEvidence",
                          "displayName": "Need to investigate target host",
                          "retired": false,
                          "properties": [
                            {
                              "name": "text",
                              "from": null,
                              "to": "Need to investigate target host"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "9BBAFC4C-AA80-410F-8674-E49DC2060207",
                      "date": "2017-09-27T18:54:24.622Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateCase",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": [
                            {
                              "name": "name",
                              "from": null,
                              "to": "History Example"
                            },
                            {
                              "name": "priority",
                              "from": null,
                              "to": "5"
                            },
                            {
                              "name": "dueDate",
                              "from": null,
                              "to": "2017-09-28 18:54:31.556 +0000 UTC"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cases/{id}/history/": {
      "x-swagger-router-controller": "history",
      "get": {
        "tags": [
          "Case History"
        ],
        "operationId": "listCaseHistory",
        "summary": "List Case History *",
        "description": "Return history for a specific case. Supports pagination.\n\n  \\* *unstable (may change in a future release)*\n",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "identifier"
            }
          },
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "actionDate"
              ],
              "default": "actionDate"
            }
          },
          {
            "name": "createdAfter",
            "description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of history for a specific case.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the history, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "9484cd8c-333d-4919-ad07-cb92c1abea2b"
                      },
                      "date": {
                        "description": "When the history was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "actor": {
                        "description": "The user that took action, creating the history.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "action": {
                        "description": "The type of action that created the history.",
                        "type": "string",
                        "example": "UpdateCase"
                      },
                      "resources": {
                        "description": "Resources created or otherwise involved in the action that created the history.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Unique identifier for the resource, as an RFC 4122 formatted string.",
                              "type": "string",
                              "format": "uuid",
                              "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                            },
                            "type": {
                              "description": "The resource type.",
                              "type": "string",
                              "example": "Case"
                            },
                            "displayName": {
                              "description": "The name of the resource.",
                              "type": "string",
                              "example": "System Compromise"
                            },
                            "retired": {
                              "description": "Whether the resource has been retired or is still active.",
                              "type": "boolean",
                              "x-omitempty": true,
                              "example": false,
                              "nullable": true
                            },
                            "properties": {
                              "description": "A set of properties describing what changed in the resource.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the resource property.",
                                    "type": "string",
                                    "example": "summary"
                                  },
                                  "from": {
                                    "description": "The value of the property prior being changed.",
                                    "type": "object",
                                    "example": ""
                                  },
                                  "to": {
                                    "description": "The value of the property after being changed.",
                                    "type": "object",
                                    "example": "Investigated a potential system compromise. More details at http://example.com/."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "id": "42FA09B8-CA87-46F3-A6B8-6155FDA7E872",
                      "date": "2017-08-30T18:24:37.080Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateLogEvidence",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": []
                        },
                        {
                          "id": "evidence:886",
                          "type": "logEvidence",
                          "displayName": "",
                          "properties": [
                            {
                              "name": "text",
                              "from": null,
                              "to": "test"
                            },
                            {
                              "name": "logCount",
                              "from": null,
                              "to": "1"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "52A8F9B0-3022-4FC3-A58E-99E67E2FE5C1",
                      "date": "2017-09-27T18:55:57.386Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "UploadFile",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": []
                        },
                        {
                          "id": "evidence:1018",
                          "type": "fileEvidence",
                          "displayName": "instructions.pdf",
                          "properties": [
                            {
                              "name": "filename",
                              "from": null,
                              "to": "instructions.pdf"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "37184C3C-8284-4B15-A8A1-BFC3137D7288",
                      "date": "2017-09-27T18:55:54.138Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateAlarmEvidence",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": [
                            {
                              "name": "earliestEvidenceDate",
                              "from": null,
                              "to": "2017-09-22 20:51:32.23 +0000 UTC"
                            }
                          ]
                        },
                        {
                          "id": "evidence:1017",
                          "type": "alarmEvidence",
                          "displayName": "Compromise - All",
                          "properties": [
                            {
                              "name": "alarm",
                              "from": null,
                              "to": {
                                "alarmId": 57887,
                                "alarmDate": "2017-09-22T20:51:32.23Z",
                                "alarmRuleId": 1000000001,
                                "alarmRuleName": "Compromise - All",
                                "dateInserted": "2017-09-22T20:51:32.59Z",
                                "entityId": 1,
                                "entityName": "Primary Site",
                                "riskBasedPriorityMax": 9
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "1A08C84F-23FB-4F10-B4B6-E0CEF29A432A",
                      "date": "2017-09-27T18:55:19.434Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateNoteEvidence",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": []
                        },
                        {
                          "id": "evidence:1016",
                          "type": "noteEvidence",
                          "displayName": "Need to investigate target host",
                          "properties": [
                            {
                              "name": "text",
                              "from": null,
                              "to": "Need to investigate target host"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "9BBAFC4C-AA80-410F-8674-E49DC2060207",
                      "date": "2017-09-27T18:54:24.622Z",
                      "actor": {
                        "number": 1,
                        "name": "John Smith"
                      },
                      "action": "CreateCase",
                      "resources": [
                        {
                          "id": "BACA95AD-E9D7-4270-A677-DA0CF4A587D8",
                          "type": "Case",
                          "displayName": "System Compromise",
                          "properties": [
                            {
                              "name": "name",
                              "from": null,
                              "to": "History Example"
                            },
                            {
                              "name": "priority",
                              "from": null,
                              "to": "5"
                            },
                            {
                              "name": "dueDate",
                              "from": null,
                              "to": "2017-09-28 18:54:31.556 +0000 UTC"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/persons/": {
      "x-swagger-router-controller": "person",
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "listPersons",
        "summary": "List People *",
        "description": "Return a list of people configured in the system. Used for\ncollaborators and notifications. Supports pagination.\n\n  \\* *unsupported endpoint*\n",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "name",
            "description": "Filter results that have a person name that contains the specified value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyUsers",
            "description": "Filter results to only persons that have a login.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of people.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "description": "Unique, numeric identifier for the person.",
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "description": "Name of the person.",
                        "type": "string",
                        "example": "John Smith"
                      },
                      "disabled": {
                        "description": "If the person is disabled in the system.",
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/persons/{number}/": {
      "x-swagger-router-controller": "person",
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "getPerson",
        "summary": "Get Person *",
        "description": "Return a person object.\n\n  \\* *unsupported endpoint*\n",
        "parameters": [
          {
            "name": "number",
            "description": "Unique, numeric identifier for the person.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a person object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the person.",
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "description": "Name of the person.",
                      "type": "string",
                      "example": "John Smith"
                    },
                    "disabled": {
                      "description": "If the person is disabled in the system.",
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collaborators/": {
      "x-swagger-router-controller": "person",
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "listCollaborators",
        "summary": "List Collaborators *",
        "description": "Return a list of active people and notification groups configured in the system. Used for collaborators and notifications. Supports pagination.\n\n  \\* *unsupported endpoint*\n",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "name",
            "description": "Filter results that have a person name that contains the specified value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of collaborators.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "description": "Numeric identifier for the person or notification group.",
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "description": "Name of the person or notification group.",
                        "type": "string",
                        "example": "Notification Group"
                      },
                      "type": {
                        "description": "Type of object.",
                        "type": "string",
                        "enum": [
                          "person",
                          "group"
                        ],
                        "example": "group"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/": {
      "x-swagger-router-controller": "case",
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "listOwners",
        "summary": "List Owners *",
        "description": "Return a list of people that are owners on cases. Supports pagination.\n\n  \\* *unsupported endpoint*\n",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "name",
            "description": "Filter results that have a person name that contains the specified value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of owners.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "description": "Unique, numeric identifier for the person.",
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "description": "Name of the person.",
                        "type": "string",
                        "example": "John Smith"
                      },
                      "disabled": {
                        "description": "If the person is disabled in the system.",
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/": {
      "x-swagger-router-controller": "playbook",
      "get": {
        "tags": [
          "Playbooks"
        ],
        "description": "Return a filtered list of playbooks. Supports pagination.",
        "summary": "List Playbooks",
        "parameters": [
          {
            "name": "offset",
            "description": "Number of results to skip when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "count",
            "description": "Maximum number of results to be returned when paging.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dateCreated",
                "dateUpdated",
                "name"
              ],
              "default": "dateCreated"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "updatedAfter",
            "description": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedBefore",
            "description": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAfter",
            "description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdBefore",
            "description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "playbook",
            "description": "Filter results that have a playbook name that contains the specified value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerNumber",
            "description": "Filter results that have a specific case owner, by person numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "retired",
            "description": "Filter results by playbook retired status. Defaults to returning only non-retired playbooks.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              },
              "maxItems": 2,
              "default": [
                false
              ]
            }
          },
          {
            "name": "tagNumber",
            "description": "Filter results that are tagged, by tag numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "entityNumber",
            "description": "Filter results by entity numbers.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "readPermissionLevel",
            "description": "Filter results that have the specified read permission levels.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              }
            }
          },
          {
            "name": "writePermissionLevel",
            "description": "Filter results that have the specified write permission levels.",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              }
            }
          }
        ],
        "operationId": "listPlaybooks",
        "responses": {
          "200": {
            "description": "Returns a list of playbooks that match the specified filters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the playbook.",
                        "minLength": 1,
                        "maxLength": 150,
                        "example": "System Compromise"
                      },
                      "description": {
                        "description": "Summary of the playbook.",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "Procedures for a potential system compromise. More details at http://example.com/."
                      },
                      "permissions": {
                        "description": "Roles and entities that can read/write to this playbook.",
                        "type": "object",
                        "required": [
                          "read",
                          "write"
                        ],
                        "properties": {
                          "read": {
                            "type": "string",
                            "description": "Level of permission, by role.",
                            "enum": [
                              "privateOwnerOnly",
                              "publicGlobalAdmin",
                              "publicGlobalAnalyst",
                              "publicRestrictedAdmin",
                              "publicRestrictedAnalyst",
                              "publicAllUsers"
                            ]
                          },
                          "write": {
                            "type": "string",
                            "description": "Level of permission, by role.",
                            "enum": [
                              "privateOwnerOnly",
                              "publicGlobalAdmin",
                              "publicGlobalAnalyst",
                              "publicRestrictedAdmin",
                              "publicRestrictedAnalyst",
                              "publicAllUsers"
                            ]
                          }
                        }
                      },
                      "owner": {
                        "description": "Current owner of the playbook.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "retired": {
                        "description": "Retired status of playbook.",
                        "type": "boolean",
                        "example": false
                      },
                      "entities": {
                        "description": "List of entities associated with the playbook.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "description": "Unique, numeric identifier for the entity.",
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "description": "Name of the Entity.",
                              "type": "string",
                              "example": "Child Entity"
                            },
                            "fullName": {
                              "description": "A full representation of the Entity as child with its parent Entity.",
                              "type": "string",
                              "example": "Parent Entity/Child Entity"
                            }
                          }
                        }
                      },
                      "dateCreated": {
                        "description": "When the playbook was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "dateUpdated": {
                        "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastUpdatedBy": {
                        "description": "Last user to update the playbook.",
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "tags": {
                        "description": "List of tags added to the playbook.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "description": "Unique, numeric identifier for the tag.",
                              "type": "integer",
                              "example": 1
                            },
                            "text": {
                              "type": "string",
                              "description": "tag text",
                              "maxLength": 255,
                              "example": "System"
                            }
                          }
                        },
                        "example": [
                          {
                            "number": 1,
                            "text": "System"
                          },
                          {
                            "number": 2,
                            "text": "Urgent"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Create Playbook",
        "description": "Create a new playbook.",
        "operationId": "createPlaybook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "permissions",
                  "entities"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the playbook.",
                    "minLength": 1,
                    "maxLength": 150,
                    "example": "System Compromise"
                  },
                  "description": {
                    "description": "Summary of the playbook.",
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Procedures for a potential system compromise. More details at http://example.com/."
                  },
                  "permissions": {
                    "description": "Roles and entities that can read/write to this playbook.",
                    "type": "object",
                    "required": [
                      "read",
                      "write"
                    ],
                    "properties": {
                      "read": {
                        "type": "string",
                        "description": "Level of permission, by role.",
                        "enum": [
                          "privateOwnerOnly",
                          "publicGlobalAdmin",
                          "publicGlobalAnalyst",
                          "publicRestrictedAdmin",
                          "publicRestrictedAnalyst",
                          "publicAllUsers"
                        ]
                      },
                      "write": {
                        "type": "string",
                        "description": "Level of permission, by role.",
                        "enum": [
                          "privateOwnerOnly",
                          "publicGlobalAdmin",
                          "publicGlobalAnalyst",
                          "publicRestrictedAdmin",
                          "publicRestrictedAnalyst",
                          "publicAllUsers"
                        ]
                      }
                    }
                  },
                  "entities": {
                    "description": "List of entity numbers that can access this playbook.  An empty list will assign the playbook to the user's default entity.",
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 1,
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      1
                    ]
                  },
                  "tags": {
                    "description": "List of numeric tag identifiers.",
                    "type": "array",
                    "items": {
                      "description": "Unique, numeric identifier for the tag.",
                      "type": "integer",
                      "example": 1
                    },
                    "example": [
                      1,
                      2
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the newly created playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the resulting playbook, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "permissions": {
                      "description": "Roles and entities that can read/write to this playbook.",
                      "type": "object",
                      "required": [
                        "read",
                        "write"
                      ],
                      "properties": {
                        "read": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        },
                        "write": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        }
                      }
                    },
                    "owner": {
                      "description": "Current owner of the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "retired": {
                      "description": "Retired status of playbook.",
                      "type": "boolean",
                      "example": false
                    },
                    "entities": {
                      "description": "List of entities associated with the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "description": "When the playbook was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "tags": {
                      "description": "List of tags added to the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/clone/": {
      "x-swagger-router-controller": "playbook",
      "post": {
        "tags": [
          "Playbooks"
        ],
        "operationId": "clonePlaybook",
        "summary": "Clone Playbook",
        "description": "Create a clone of a playbook along with its tags, attachments, and procedures.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                    "type": "string",
                    "format": "uuid",
                    "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the playbook.",
                    "minLength": 1,
                    "maxLength": 150,
                    "example": "System Compromise"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the cloned playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the resulting playbook, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "permissions": {
                      "description": "Roles and entities that can read/write to this playbook.",
                      "type": "object",
                      "required": [
                        "read",
                        "write"
                      ],
                      "properties": {
                        "read": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        },
                        "write": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        }
                      }
                    },
                    "owner": {
                      "description": "Current owner of the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "retired": {
                      "description": "Retired status of playbook.",
                      "type": "boolean",
                      "example": false
                    },
                    "entities": {
                      "description": "List of entities associated with the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "description": "When the playbook was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "tags": {
                      "description": "List of tags added to the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/import/": {
      "x-swagger-router-controller": "playbook",
      "post": {
        "tags": [
          "Playbook Import / Export"
        ],
        "operationId": "importPlaybook",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "importAction": {
                    "description": "Enum for what action to take during playbook import\n\n\\- *basicImport*. Import the playbook unless a playbook with the same Id already exists in the system.\n\n\\- *overwrite*. Import the playbook and overwrite an existing playbook with the same Id, if it already exists.\n\n\\- *createNew*. Import the playbook with a new Id.\n",
                    "type": "string",
                    "enum": [
                      "basicImport",
                      "overwrite",
                      "createNew"
                    ],
                    "default": "basicImport"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "summary": "Import Playbook",
        "description": "Import a playbook.",
        "responses": {
          "201": {
            "description": "Returns the imported playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the resulting playbook, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "permissions": {
                      "description": "Roles and entities that can read/write to this playbook.",
                      "type": "object",
                      "required": [
                        "read",
                        "write"
                      ],
                      "properties": {
                        "read": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        },
                        "write": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        }
                      }
                    },
                    "owner": {
                      "description": "Current owner of the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "retired": {
                      "description": "Retired status of playbook.",
                      "type": "boolean",
                      "example": false
                    },
                    "entities": {
                      "description": "List of entities associated with the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "description": "When the playbook was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "tags": {
                      "description": "List of tags added to the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/{id}/": {
      "x-swagger-router-controller": "playbook",
      "get": {
        "tags": [
          "Playbooks"
        ],
        "description": "Get a playbook by Id.",
        "summary": "Get Playbook",
        "operationId": "getPlaybook",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the resulting playbook, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "permissions": {
                      "description": "Roles and entities that can read/write to this playbook.",
                      "type": "object",
                      "required": [
                        "read",
                        "write"
                      ],
                      "properties": {
                        "read": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        },
                        "write": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        }
                      }
                    },
                    "owner": {
                      "description": "Current owner of the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "retired": {
                      "description": "Retired status of playbook.",
                      "type": "boolean",
                      "example": false
                    },
                    "entities": {
                      "description": "List of entities associated with the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "description": "When the playbook was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "tags": {
                      "description": "List of tags added to the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Update Playbook",
        "description": "Update an existing playbook or create a new one with the specified Id if one does not exist.",
        "operationId": "UpsertPlaybook",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "If-None-Match",
            "description": "Ensure that no playbook exists with the given Id. This can be used to conditionally\ncreate a new playbook with the specified Id only as long as one does not already exist.\n",
            "in": "header",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "*"
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "permissions",
                  "entities",
                  "tags"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the playbook.",
                    "minLength": 1,
                    "maxLength": 150,
                    "example": "System Compromise"
                  },
                  "description": {
                    "description": "Summary of the playbook.",
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Procedures for a potential system compromise. More details at http://example.com/."
                  },
                  "permissions": {
                    "description": "Roles and entities that can read/write to this playbook.",
                    "type": "object",
                    "required": [
                      "read",
                      "write"
                    ],
                    "properties": {
                      "read": {
                        "type": "string",
                        "description": "Level of permission, by role.",
                        "enum": [
                          "privateOwnerOnly",
                          "publicGlobalAdmin",
                          "publicGlobalAnalyst",
                          "publicRestrictedAdmin",
                          "publicRestrictedAnalyst",
                          "publicAllUsers"
                        ]
                      },
                      "write": {
                        "type": "string",
                        "description": "Level of permission, by role.",
                        "enum": [
                          "privateOwnerOnly",
                          "publicGlobalAdmin",
                          "publicGlobalAnalyst",
                          "publicRestrictedAdmin",
                          "publicRestrictedAnalyst",
                          "publicAllUsers"
                        ]
                      }
                    }
                  },
                  "entities": {
                    "description": "List of entity numbers that can access this playbook.  An empty list will assign the playbook to the user's default entity.",
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 1,
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      1
                    ]
                  },
                  "tags": {
                    "description": "List of numeric tag identifiers.",
                    "type": "array",
                    "items": {
                      "description": "Unique, numeric identifier for the tag.",
                      "type": "integer",
                      "example": 1
                    },
                    "example": [
                      1,
                      2
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the resulting playbook, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "permissions": {
                      "description": "Roles and entities that can read/write to this playbook.",
                      "type": "object",
                      "required": [
                        "read",
                        "write"
                      ],
                      "properties": {
                        "read": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        },
                        "write": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        }
                      }
                    },
                    "owner": {
                      "description": "Current owner of the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "retired": {
                      "description": "Retired status of playbook.",
                      "type": "boolean",
                      "example": false
                    },
                    "entities": {
                      "description": "List of entities associated with the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "description": "When the playbook was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "tags": {
                      "description": "List of tags added to the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Returns the newly created playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the resulting playbook, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "permissions": {
                      "description": "Roles and entities that can read/write to this playbook.",
                      "type": "object",
                      "required": [
                        "read",
                        "write"
                      ],
                      "properties": {
                        "read": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        },
                        "write": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        }
                      }
                    },
                    "owner": {
                      "description": "Current owner of the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "retired": {
                      "description": "Retired status of playbook.",
                      "type": "boolean",
                      "example": false
                    },
                    "entities": {
                      "description": "List of entities associated with the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "description": "When the playbook was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "tags": {
                      "description": "List of tags added to the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Playbooks"
        ],
        "summary": "Update Playbook (Partial)",
        "description": "Update some or all of the properties of a playbook. Omitted properties will remain unchanged.",
        "operationId": "updatePlaybook",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure that the playbook on the server does not have changes that will be overwritten by this request.\nThis can be used to prevent outdated updates to the playbook that would overwrite other changes.\n",
            "in": "header",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the playbook.",
                    "minLength": 1,
                    "maxLength": 150,
                    "example": "System Compromise"
                  },
                  "description": {
                    "description": "Summary of the playbook.",
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Procedures for a potential system compromise. More details at http://example.com/."
                  },
                  "permissions": {
                    "description": "Roles and entities that can read/write to this playbook.",
                    "type": "object",
                    "required": [
                      "read",
                      "write"
                    ],
                    "properties": {
                      "read": {
                        "type": "string",
                        "description": "Level of permission, by role.",
                        "enum": [
                          "privateOwnerOnly",
                          "publicGlobalAdmin",
                          "publicGlobalAnalyst",
                          "publicRestrictedAdmin",
                          "publicRestrictedAnalyst",
                          "publicAllUsers"
                        ]
                      },
                      "write": {
                        "type": "string",
                        "description": "Level of permission, by role.",
                        "enum": [
                          "privateOwnerOnly",
                          "publicGlobalAdmin",
                          "publicGlobalAnalyst",
                          "publicRestrictedAdmin",
                          "publicRestrictedAnalyst",
                          "publicAllUsers"
                        ]
                      }
                    }
                  },
                  "entities": {
                    "description": "List of entity numbers that can access this playbook.",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 1,
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      1
                    ]
                  },
                  "owner": {
                    "description": "Unique, numeric identifier for the owner. Can only be modified by global administrators.",
                    "type": "integer",
                    "example": 1
                  },
                  "retired": {
                    "description": "Retired status of playbook.",
                    "type": "boolean",
                    "example": false
                  },
                  "tags": {
                    "description": "List of numeric tag identifiers. This list of tags will overwrite the tags currently on the playbook.",
                    "type": "array",
                    "items": {
                      "description": "Unique, numeric identifier for the tag.",
                      "type": "integer",
                      "example": 1
                    },
                    "example": [
                      1,
                      2
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the resulting playbook, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the playbook.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "System Compromise"
                    },
                    "description": {
                      "description": "Summary of the playbook.",
                      "type": "string",
                      "maxLength": 1000,
                      "example": "Procedures for a potential system compromise. More details at http://example.com/."
                    },
                    "permissions": {
                      "description": "Roles and entities that can read/write to this playbook.",
                      "type": "object",
                      "required": [
                        "read",
                        "write"
                      ],
                      "properties": {
                        "read": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        },
                        "write": {
                          "type": "string",
                          "description": "Level of permission, by role.",
                          "enum": [
                            "privateOwnerOnly",
                            "publicGlobalAdmin",
                            "publicGlobalAnalyst",
                            "publicRestrictedAdmin",
                            "publicRestrictedAnalyst",
                            "publicAllUsers"
                          ]
                        }
                      }
                    },
                    "owner": {
                      "description": "Current owner of the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "retired": {
                      "description": "Retired status of playbook.",
                      "type": "boolean",
                      "example": false
                    },
                    "entities": {
                      "description": "List of entities associated with the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the entity.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the Entity.",
                            "type": "string",
                            "example": "Child Entity"
                          },
                          "fullName": {
                            "description": "A full representation of the Entity as child with its parent Entity.",
                            "type": "string",
                            "example": "Parent Entity/Child Entity"
                          }
                        }
                      }
                    },
                    "dateCreated": {
                      "description": "When the playbook was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "description": "Last user to update the playbook.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "tags": {
                      "description": "List of tags added to the playbook.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the tag.",
                            "type": "integer",
                            "example": 1
                          },
                          "text": {
                            "type": "string",
                            "description": "tag text",
                            "maxLength": 255,
                            "example": "System"
                          }
                        }
                      },
                      "example": [
                        {
                          "number": 1,
                          "text": "System"
                        },
                        {
                          "number": 2,
                          "text": "Urgent"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Playbooks"
        ],
        "operationId": "deletePlaybook",
        "description": "Delete a playbook from the system.",
        "summary": "Delete Playbook",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No body is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/{id}/export/": {
      "x-swagger-router-controller": "playbook",
      "get": {
        "tags": [
          "Playbook Import / Export"
        ],
        "operationId": "exportPlaybook",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "summary": "Export Playbook",
        "description": "Export a playbook along with attachments and procedures.",
        "responses": {
          "200": {
            "description": "Returns the exported playbook attachments and procedures.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/{id}/files/": {
      "x-swagger-router-controller": "playbook",
      "get": {
        "tags": [
          "Playbook Attachments"
        ],
        "operationId": "listAttachmentsMetadata",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dateUpdated",
                "name"
              ],
              "default": "name"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "summary": "List Attachments",
        "description": "List all attachments for a given playbook.",
        "responses": {
          "200": {
            "description": "Returns the playbook attachment file details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the file upload, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "fc6efecb-e78f-4d07-ab4e-25c655a75e55"
                      },
                      "dateCreated": {
                        "description": "When the metadata was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "dateUpdated": {
                        "description": "When the metadata was updated, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastUpdatedBy": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "description": "Unique, numeric identifier for the person.",
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "description": "Name of the person.",
                            "type": "string",
                            "example": "John Smith"
                          },
                          "disabled": {
                            "description": "If the person is disabled in the system.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      },
                      "status": {
                        "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
                        "type": "string",
                        "enum": [
                          "pending",
                          "completed",
                          "failed",
                          "unknown"
                        ],
                        "example": "completed"
                      },
                      "name": {
                        "description": "Name of the uploaded file.",
                        "type": "string",
                        "example": "instructions.pdf"
                      },
                      "size": {
                        "description": "Size of the uploaded file in bytes.",
                        "type": "integer",
                        "example": 1024
                      },
                      "mimeType": {
                        "description": "MIME type of the uploaded file.",
                        "type": "string",
                        "maxLength": 127,
                        "example": "application/pdf"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/{id}/files/{fid}/": {
      "x-swagger-router-controller": "playbook",
      "get": {
        "tags": [
          "Playbook Attachments"
        ],
        "operationId": "getAttachmentMetadata",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fid",
            "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "summary": "Get Attachment",
        "description": "Return the metadata for a specific playbook attachment.",
        "responses": {
          "200": {
            "description": "Returns the playbook attachment file metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the file upload, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "fc6efecb-e78f-4d07-ab4e-25c655a75e55"
                    },
                    "dateCreated": {
                      "description": "When the metadata was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "dateUpdated": {
                      "description": "When the metadata was updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "status": {
                      "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "name": {
                      "description": "Name of the uploaded file.",
                      "type": "string",
                      "example": "instructions.pdf"
                    },
                    "size": {
                      "description": "Size of the uploaded file in bytes.",
                      "type": "integer",
                      "example": 1024
                    },
                    "mimeType": {
                      "description": "MIME type of the uploaded file.",
                      "type": "string",
                      "maxLength": 127,
                      "example": "application/pdf"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Playbook Attachments"
        ],
        "operationId": "LinkAttachment",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fid",
            "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "summary": "Link Attachment",
        "description": "Add a file to a playbook as an attachment.",
        "responses": {
          "204": {
            "description": "No body is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Playbook Attachments"
        ],
        "operationId": "deleteAttachment",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fid",
            "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "summary": "Unlink Attachment",
        "description": "Remove a file attachment from a playbook.",
        "responses": {
          "204": {
            "description": "No body is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/{id}/files/{fid}/contents/": {
      "x-swagger-router-controller": "playbook",
      "get": {
        "tags": [
          "Playbook Attachments"
        ],
        "operationId": "downloadAttachment",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fid",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "summary": "Download Attachment",
        "description": "Download a file attachment on a playbook.",
        "responses": {
          "200": {
            "description": "Returns the downloaded file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/{id}/procedures/": {
      "x-swagger-router-controller": "procedure",
      "get": {
        "tags": [
          "Playbook Procedures"
        ],
        "summary": "List Procedures",
        "description": "Return a list of procedures for a playbook.",
        "operationId": "listProcedures",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "orderBy",
            "description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ordering",
                "dateCreated",
                "dateUpdated",
                "name"
              ],
              "default": "ordering"
            }
          },
          {
            "name": "direction",
            "description": "Sorts results in ascending or descending order.",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of procedures for a specific playbook.",
            "headers": {
              "ETag": {
                "description": "Entity Tag for the playbook's procedures, as described in RFC 7232.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "232D7C34-7FB4-4A66-8247-C52FDEDC2185"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the procedure.",
                        "minLength": 1,
                        "maxLength": 150,
                        "example": "Notify HR"
                      },
                      "description": {
                        "description": "Detailed information on the procedure.",
                        "type": "string",
                        "maxLength": 4000,
                        "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                      },
                      "dueWithinSeconds": {
                        "description": "Duration, in seconds, from which a procedure is due after it is attached to a case. The maximum is one year.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 31536000,
                        "default": 0
                      },
                      "dateCreated": {
                        "description": "When the case was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Playbook Procedures"
        ],
        "summary": "Update Procedures",
        "description": "Add, update, remove, or reorder playbook procedures. The procedures\nspecified in the request body will replace all existing procedures\nfor the playbook.\n\n### Adding/Updating Procedures\nIn the request body, any procedure that does *not* have an `Id` will\nbe assigned an `Id`, created, and then added to the resulting procedure list.\n\nProcedures in the request body that *do* have an `Id` will be\n\"upserted,\" that is, if a procedure with that `Id` exists, it will be\nupdated to match the given contents and ordering; if it does not exist,\nit will be added in the given order.\n\n### Removing/Reordering Procedures\nAny existing procedure that is not listed in the request body will\nbe removed.\n\nThe order of the list in the request body will become the\nprocedure order.\n",
        "operationId": "upsertProcedures",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "If-Match",
            "description": "Ensure that the procedures on the server do not have changes that will be overwritten\nby this request. Can be used to prevent outdated updates to procedures that would\noverwrite other changes.\n",
            "in": "header",
            "required": false,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "maxItems": 100,
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "description"
                  ],
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "232D7C34-7FB4-4A66-8247-C52FDEDC2185"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the procedure.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "Notify HR"
                    },
                    "description": {
                      "description": "Detailed information on the procedure.",
                      "type": "string",
                      "maxLength": 4000,
                      "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                    },
                    "dueWithinSeconds": {
                      "description": "Duration, in seconds, from which a procedure is due after it is attached to a case. The maximum is one year.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 31536000,
                      "default": 0
                    }
                  }
                },
                "example": [
                  {
                    "name": "new procedure name",
                    "description": "Send email to sarah.smith@company.com",
                    "dueWithinSeconds": 0
                  },
                  {
                    "id": "232D7C34-7FB4-4A66-8247-C52FDEDC2185",
                    "name": "existing procedure name",
                    "description": "Call supervisor",
                    "dueWithinSeconds": 0
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the updated procedures.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
                        "type": "string",
                        "format": "uuid",
                        "example": "232D7C34-7FB4-4A66-8247-C52FDEDC2185"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the procedure.",
                        "minLength": 1,
                        "maxLength": 150,
                        "example": "Notify HR"
                      },
                      "description": {
                        "description": "Detailed information on the procedure.",
                        "type": "string",
                        "maxLength": 4000,
                        "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                      },
                      "dueWithinSeconds": {
                        "description": "Duration, in seconds, from which a procedure is due after it is attached to a case. The maximum is one year.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 31536000,
                        "default": 0
                      },
                      "dateCreated": {
                        "description": "When the case was created, as an RFC 3339 formatted string.",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "example": [
                    {
                      "id": "C8A47ADB-BFB5-436D-B3AE-C8C9FF37DDFA",
                      "name": "new procedure name",
                      "description": "Send email to sarah.smith@company.com",
                      "dueWithinSeconds": 0
                    },
                    {
                      "id": "232D7C34-7FB4-4A66-8247-C52FDEDC2185",
                      "name": "existing procedure name",
                      "description": "Call supervisor",
                      "dueWithinSeconds": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/playbooks/{id}/procedures/{pid}/": {
      "x-swagger-router-controller": "procedure",
      "get": {
        "tags": [
          "Playbook Procedures"
        ],
        "summary": "Get Procedure",
        "description": "Return a procedure with a specific Id.",
        "operationId": "getProcedure",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pid",
            "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified procedure.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "232D7C34-7FB4-4A66-8247-C52FDEDC2185"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the procedure.",
                      "minLength": 1,
                      "maxLength": 150,
                      "example": "Notify HR"
                    },
                    "description": {
                      "description": "Detailed information on the procedure.",
                      "type": "string",
                      "maxLength": 4000,
                      "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
                    },
                    "dueWithinSeconds": {
                      "description": "Duration, in seconds, from which a procedure is due after it is attached to a case. The maximum is one year.",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 31536000,
                      "default": 0
                    },
                    "dateCreated": {
                      "description": "When the case was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/": {
      "x-swagger-router-controller": "file",
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload File",
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Returns the attached file details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the file upload, as an RFC 4122 formatted string.",
                      "type": "string",
                      "format": "uuid",
                      "example": "fc6efecb-e78f-4d07-ab4e-25c655a75e55"
                    },
                    "dateCreated": {
                      "description": "When the metadata was created, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "dateUpdated": {
                      "description": "When the metadata was updated, as an RFC 3339 formatted string.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdatedBy": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Unique, numeric identifier for the person.",
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "description": "Name of the person.",
                          "type": "string",
                          "example": "John Smith"
                        },
                        "disabled": {
                          "description": "If the person is disabled in the system.",
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "status": {
                      "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    },
                    "name": {
                      "description": "Name of the uploaded file.",
                      "type": "string",
                      "example": "instructions.pdf"
                    },
                    "size": {
                      "description": "Size of the uploaded file in bytes.",
                      "type": "integer",
                      "example": 1024
                    },
                    "mimeType": {
                      "description": "MIME type of the uploaded file.",
                      "type": "string",
                      "maxLength": 127,
                      "example": "application/pdf"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/whitelist/": {
      "x-swagger-router-controller": "file",
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get Whitelist",
        "operationId": "getWhitelist",
        "description": "Return the file extension whitelist.",
        "responses": {
          "200": {
            "description": "Returns a list of accepted file extensions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{id}/progress/": {
      "x-swagger-router-controller": "file",
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get File Progress",
        "description": "Return the progress of a file that is uploading or has been uploaded.",
        "operationId": "getFileProgress",
        "parameters": [
          {
            "name": "id",
            "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the progress of the file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "bytesUploaded",
                    "fileSizeBytes",
                    "status"
                  ],
                  "properties": {
                    "bytesUploaded": {
                      "description": "The number of bytes that have been processed and written to the database.",
                      "type": "integer"
                    },
                    "fileSizeBytes": {
                      "description": "The number of bytes contained in the file.",
                      "type": "integer"
                    },
                    "status": {
                      "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
                      "type": "string",
                      "enum": [
                        "pending",
                        "completed",
                        "failed",
                        "unknown"
                      ],
                      "example": "completed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feature-flags/": {
      "x-swagger-router-controller": "featureFlags",
      "get": {
        "tags": [
          "Feature Flags"
        ],
        "summary": "Get Feature Flags *",
        "description": "Retrieve the current feature flags of the Case API.\n\n  \\* *unsupported endpoint*\n",
        "operationId": "getFeatureFlags",
        "responses": {
          "200": {
            "description": "The current feature flags.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "onDemandLogIndexUnarchivingEnabled": {
                      "description": "Indicates whether case logs evidence can be restored on-demand for a closed case.",
                      "type": "boolean"
                    },
                    "caseEntityEnabled": {
                      "description": "Indicates whether entity restrictions are available for case management.",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maintenance/log-evidence-ttl/": {
      "x-swagger-router-controller": "maintenance",
      "post": {
        "tags": [
          "Maintenance"
        ],
        "summary": "Run Log Evidence Maintenance *",
        "description": "Run maintenance to archive log evidence indexes for cases that are closed,\nwhere the log index update or rebuild date is older than the specified TTL.\n\n  \\* *unsupported endpoint*\n",
        "operationId": "runLogEvidenceTTLMaintenance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ttl",
                  "reason"
                ],
                "properties": {
                  "ttl": {
                    "description": "Time-to-live value of closed case log evidence, in seconds.",
                    "type": "integer",
                    "minimum": 0,
                    "example": 86400
                  },
                  "reason": {
                    "description": "Information regarding reason for calling maintenance.",
                    "type": "string",
                    "maxLength": 4000,
                    "example": "Triggered to reduce active log index load on system."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns summary of performed log evidence time to live maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "archivedLogIndexCount": {
                      "description": "Number of logs indexes archived during maintenance.",
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/capabilities/": {
      "x-swagger-router-controller": "capabilities",
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Get Capabilities",
        "description": "Retrieve the current capabilities of the Case API.",
        "operationId": "getCapabilities",
        "responses": {
          "200": {
            "description": "The current capabilities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "caseEntityEnforcement": {
                      "description": "Indicates the current case entity restriction level.",
                      "type": "string",
                      "enum": [
                        "none",
                        "warn",
                        "enforce"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://localhost:8501/lr-case-api",
      "description": "Local API Gateway (https)"
    }
  ],
  "components": {
    "parameters": {
      "pathCaseId": {
        "name": "id",
        "description": "Unique identifier for the case, either as an RFC 4122 formatted string, or as a number.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "identifier"
        }
      },
      "pathEvidenceNumber": {
        "name": "number",
        "description": "Unique, numeric identifier for the evidence.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "pathTagNumber": {
        "name": "number",
        "description": "Unique, numeric identifier for the tag.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "pathPersonNumber": {
        "name": "number",
        "description": "Unique, numeric identifier for the person.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "priorityFilter": {
        "name": "priority",
        "description": "Filter results that have a specific case priority.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ]
          }
        }
      },
      "statusNumberFilter": {
        "name": "statusNumber",
        "description": "Filter results that have a specific case status.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ]
          }
        }
      },
      "offset": {
        "name": "offset",
        "description": "Number of results to skip when paging.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0
        }
      },
      "count": {
        "name": "count",
        "description": "Maximum number of results to be returned when paging.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 25
        }
      },
      "ownerNumberFilter": {
        "name": "ownerNumber",
        "description": "Filter results that have a specific case owner, by person numbers.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "playbookRetiredFilter": {
        "name": "retired",
        "description": "Filter results by playbook retired status. Defaults to returning only non-retired playbooks.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "boolean"
          },
          "maxItems": 2,
          "default": [
            false
          ]
        }
      },
      "tagNumberFilter": {
        "name": "tagNumber",
        "description": "Filter results that are tagged, by tag numbers.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "tagNameFilter": {
        "name": "tag",
        "description": "Filter results that have a tag name that contains the specified value.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "casesOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "dateCreated",
            "dateClosed",
            "dateUpdated",
            "name",
            "number",
            "priority",
            "dueDate",
            "age",
            "statusNumber"
          ],
          "default": "dateCreated"
        }
      },
      "historyOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "actionDate"
          ],
          "default": "actionDate"
        }
      },
      "direction": {
        "name": "direction",
        "description": "Sorts results in ascending or descending order.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "asc"
        }
      },
      "historyDirection": {
        "name": "direction",
        "description": "Sorts results in ascending or descending order.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        }
      },
      "updatedAfterFilter": {
        "name": "updatedAfter",
        "description": "Filter results that were updated after the specified date. Must be an RFC 3339 formatted string.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "updatedBeforeFilter": {
        "name": "updatedBefore",
        "description": "Filter results that were updated before the specified date. Must be an RFC 3339 formatted string.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "createdAfterFilter": {
        "name": "createdAfter",
        "description": "Filter results that were created after the specified date. Must be an RFC 3339 formatted string.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "createdBeforeFilter": {
        "name": "createdBefore",
        "description": "Filter results that were created before the specified date. Must be an RFC 3339 formatted string.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "dueBeforeFilter": {
        "name": "dueBefore",
        "description": "Filter results that have a due date before the specified date. Must be an RFC 3339 formatted string.",
        "in": "query",
        "required": false,
        "x-nullable": true,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "filesOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "dateUpdated",
            "name"
          ],
          "default": "name"
        }
      },
      "caseDueBeforeFilter": {
        "name": "caseDueBefore",
        "description": "Filter results that have a case due date before the specified date. Must be an RFC 3339 formatted string.",
        "in": "query",
        "required": false,
        "x-nullable": true,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "caseDueAfterFilter": {
        "name": "caseDueAfter",
        "description": "Filter results that have a case due date after the specified date. Must be an RFC 3339 formatted string.",
        "in": "query",
        "required": false,
        "x-nullable": true,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "collaboratorNumberFilter": {
        "name": "collaboratorNumber",
        "description": "Filter results that have a specific case collaborator, by person number.",
        "in": "query",
        "required": false,
        "x-nullable": true,
        "schema": {
          "type": "integer"
        }
      },
      "caseNumberFilter": {
        "name": "caseNumber",
        "description": "Filter results by case numbers.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "caseNameFilter": {
        "name": "caseName",
        "description": "Filter results that have a case name that contains the specified value.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "caseTextFilter": {
        "name": "text",
        "description": "Filter results that have a case number or name that contains the specified value.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "caseEvidenceTypeFilter": {
        "name": "evidenceType",
        "description": "Filter results that have evidence of the specified type.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "alarm",
              "userEvents",
              "log",
              "note",
              "file"
            ]
          }
        }
      },
      "evidenceTypeFilter": {
        "name": "type",
        "description": "Filter results that have evidence of the specified type.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "alarm",
              "userEvents",
              "log",
              "note",
              "file"
            ]
          }
        }
      },
      "evidenceStatusFilter": {
        "name": "status",
        "description": "Filter results that have a specific evidence status.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed"
            ]
          }
        }
      },
      "caseEvidenceReferenceIdFilter": {
        "name": "referenceId",
        "description": "Filter results that have evidence with the given reference identifier. For example, an alarm Id.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "caseExternalIdFilter": {
        "name": "externalId",
        "description": "Filter results that have the specified unique, external identifier.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "caseEntityNumberFilter": {
        "name": "entityNumber",
        "description": "Filter results that have the specified assigned entity number.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "personNameFilter": {
        "name": "name",
        "description": "Filter results that have a person name that contains the specified value.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "personOnlyUsersFilter": {
        "name": "onlyUsers",
        "description": "Filter results to only persons that have a login.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "pathPlaybookId": {
        "name": "id",
        "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "pathFileId": {
        "name": "id",
        "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "playbooksOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "dateCreated",
            "dateUpdated",
            "name"
          ],
          "default": "dateCreated"
        }
      },
      "playbookNameFilter": {
        "name": "playbook",
        "description": "Filter results that have a playbook name that contains the specified value.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "procedureOnCaseNameFilter": {
        "name": "name",
        "description": "Filter results that have the specified name.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "procedureOnCaseDescriptionFilter": {
        "name": "description",
        "description": "Filter results that have the specified description.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "procedureOnCaseStatusFilter": {
        "name": "status",
        "description": "Filter results that have the specified procedure status.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NotCompleted",
              "Completed",
              "Skipped"
            ]
          }
        }
      },
      "procedureOnCaseAssigneeFilter": {
        "name": "assignee",
        "description": "Filter results that have a specific procedure assignee, by person numbers. Note that you can specify the literal value `null` to filter for unassigned procedures.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "procedureOnCaseDueBeforeFilter": {
        "name": "dueBefore",
        "description": "Filter results that have a procedure due date before the specified date. Must be an RFC 3339 formatted string.",
        "in": "query",
        "required": false,
        "x-nullable": true,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "procedureOnCaseDueAfterFilter": {
        "name": "dueAfter",
        "description": "Filter results that have a procedure due date after the specified date. Must be an RFC 3339 formatted string.",
        "in": "query",
        "required": false,
        "x-nullable": true,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "entityNumberFilter": {
        "name": "entityNumber",
        "description": "Filter results by entity numbers.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "readPermissionLevelFilter": {
        "name": "readPermissionLevel",
        "description": "Filter results that have the specified read permission levels.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "privateOwnerOnly",
              "publicGlobalAdmin",
              "publicGlobalAnalyst",
              "publicRestrictedAdmin",
              "publicRestrictedAnalyst",
              "publicAllUsers"
            ]
          }
        }
      },
      "writePermissionLevelFilter": {
        "name": "writePermissionLevel",
        "description": "Filter results that have the specified write permission levels.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "privateOwnerOnly",
              "publicGlobalAdmin",
              "publicGlobalAnalyst",
              "publicRestrictedAdmin",
              "publicRestrictedAnalyst",
              "publicAllUsers"
            ]
          }
        }
      },
      "pathProcedureId": {
        "name": "pid",
        "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "proceduresOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ordering",
            "dateCreated",
            "dateUpdated",
            "name"
          ],
          "default": "ordering"
        }
      },
      "proceduresOnCaseOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ordering",
            "dateUpdated",
            "dueDate",
            "name"
          ],
          "default": "ordering"
        }
      },
      "proceduresOnAllCasesOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field. `ordering` is the order in which the procedure appears in the playbook.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "dateUpdated",
            "dueDate",
            "name",
            "status",
            "caseName",
            "caseNumber",
            "caseDueDate"
          ],
          "default": "dateUpdated"
        }
      },
      "pathPlaybookOnCaseId": {
        "name": "pid",
        "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "pathProcedureOnCaseId": {
        "name": "prid",
        "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "pathFileOnPlaybook": {
        "name": "fid",
        "description": "Unique identifier for the file, as an RFC 4122 formatted string.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "logsIndexStateFilter": {
        "name": "state",
        "description": "Filter results that have the specified logs index state.",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "rebuilding",
              "ready",
              "archived",
              "error"
            ]
          }
        }
      },
      "logsIndexesOnAllCasesOrderBy": {
        "name": "orderBy",
        "description": "Sorts the returned results by the specified field.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "dateCreated",
            "dateUpdated"
          ],
          "default": "dateUpdated"
        }
      }
    },
    "requestBodies": {
      "addAssociatedCasesAddassociatedcasesbody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "ids"
              ],
              "properties": {
                "ids": {
                  "description": "List of case identifiers.",
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 100,
                  "items": {
                    "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                    "type": "string",
                    "format": "uuid",
                    "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                  }
                }
              }
            }
          }
        },
        "required": true
      },
      "addTagsAddtagsbody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "numbers"
              ],
              "properties": {
                "numbers": {
                  "description": "List of numeric tag identifiers.",
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 100,
                  "items": {
                    "description": "Unique, numeric identifier for the tag.",
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Authenticate using a JSON Web Token (JWT)."
      }
    },
    "schemas": {
      "playbookName": {
        "type": "string",
        "description": "Name of the playbook.",
        "minLength": 1,
        "maxLength": 150,
        "example": "System Compromise"
      },
      "playbookDescription": {
        "description": "Summary of the playbook.",
        "type": "string",
        "maxLength": 1000,
        "example": "Procedures for a potential system compromise. More details at http://example.com/."
      },
      "permissionLevel": {
        "type": "string",
        "description": "Level of permission, by role.",
        "enum": [
          "privateOwnerOnly",
          "publicGlobalAdmin",
          "publicGlobalAnalyst",
          "publicRestrictedAdmin",
          "publicRestrictedAnalyst",
          "publicAllUsers"
        ]
      },
      "procedureId": {
        "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
        "type": "string",
        "format": "uuid",
        "example": "232D7C34-7FB4-4A66-8247-C52FDEDC2185"
      },
      "procedureName": {
        "type": "string",
        "description": "Name of the procedure.",
        "minLength": 1,
        "maxLength": 150,
        "example": "Notify HR"
      },
      "procedureDescription": {
        "description": "Detailed information on the procedure.",
        "type": "string",
        "maxLength": 4000,
        "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
      },
      "procedureDueWithin": {
        "description": "Duration, in seconds, from which a procedure is due after it is attached to a case. The maximum is one year.",
        "type": "integer",
        "minimum": 0,
        "maximum": 31536000,
        "default": 0
      },
      "CaseSummary": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
          },
          "number": {
            "description": "Unique, numeric identifier for the case.",
            "type": "integer",
            "example": 1
          },
          "externalId": {
            "description": "Externally defined identifier for the case.",
            "type": "string",
            "maxLength": 250,
            "example": "EXTERNAL-1234"
          },
          "dateCreated": {
            "description": "When the case was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "description": "When the case was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "dateClosed": {
            "description": "When the case was closed, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "description": "Current owner of the case.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "lastUpdatedBy": {
            "description": "Last user to update the case.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the case.",
            "minLength": 1,
            "maxLength": 250,
            "example": "System Compromise"
          },
          "status": {
            "description": "Status of the case.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Display name of the status.",
                "enum": [
                  "Created",
                  "Completed",
                  "Incident",
                  "Mitigated",
                  "Resolved"
                ],
                "example": "Mitigated"
              },
              "number": {
                "type": "integer",
                "description": "Numeric identifier of the status.",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ],
                "example": 4
              }
            }
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the case.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "example": 1
          },
          "dueDate": {
            "description": "When the case is due, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolution": {
            "description": "Description of how the case was resolved.",
            "type": "string",
            "maxLength": 500,
            "example": "Quarantined the target system for further investigation.",
            "nullable": true
          },
          "resolutionDateUpdated": {
            "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolutionLastUpdatedBy": {
            "description": "Last user to update the case resolution.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            },
            "nullable": true
          },
          "summary": {
            "description": "Note summarizing the case.",
            "type": "string",
            "maxLength": 10000,
            "example": "Investigated a potential system compromise. More details at http://example.com/."
          },
          "entity": {
            "description": "Entity associated with the case.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the entity.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the Entity.",
                "type": "string",
                "example": "Child Entity"
              },
              "fullName": {
                "description": "A full representation of the Entity as child with its parent Entity.",
                "type": "string",
                "example": "Parent Entity/Child Entity"
              }
            }
          },
          "collaborators": {
            "description": "List of collaborators on the case.",
            "x-omitempty": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "description": "Unique, numeric identifier for the person.",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Name of the person.",
                  "type": "string",
                  "example": "John Smith"
                },
                "disabled": {
                  "description": "If the person is disabled in the system.",
                  "type": "boolean",
                  "example": false
                }
              }
            },
            "example": [
              {
                "number": 1,
                "name": "John Smith"
              },
              {
                "number": 2,
                "name": "Jane Clark"
              }
            ]
          },
          "tags": {
            "description": "List of tags added to the case.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "description": "Unique, numeric identifier for the tag.",
                  "type": "integer",
                  "example": 1
                },
                "text": {
                  "type": "string",
                  "description": "tag text",
                  "maxLength": 255,
                  "example": "System"
                }
              }
            },
            "example": [
              {
                "number": 1,
                "text": "System"
              },
              {
                "number": 2,
                "text": "Urgent"
              }
            ]
          }
        }
      },
      "CaseStatus": {
        "description": "Status of the case.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the status.",
            "enum": [
              "Created",
              "Completed",
              "Incident",
              "Mitigated",
              "Resolved"
            ],
            "example": "Mitigated"
          },
          "number": {
            "type": "integer",
            "description": "Numeric identifier of the status.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "example": 4
          }
        }
      },
      "UploadStatus": {
        "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
        "type": "string",
        "enum": [
          "pending",
          "completed",
          "failed",
          "unknown"
        ],
        "example": "completed"
      },
      "AssociatedCaseSummary": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
          },
          "number": {
            "description": "Unique, numeric identifier for the case.",
            "type": "integer",
            "example": 1
          },
          "externalId": {
            "description": "Externally defined identifier for the case.",
            "type": "string",
            "maxLength": 250,
            "example": "EXTERNAL-1234"
          },
          "private": {
            "type": "boolean"
          },
          "summary": {
            "x-omitempty": true,
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                "type": "string",
                "format": "uuid",
                "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
              },
              "number": {
                "description": "Unique, numeric identifier for the case.",
                "type": "integer",
                "example": 1
              },
              "externalId": {
                "description": "Externally defined identifier for the case.",
                "type": "string",
                "maxLength": 250,
                "example": "EXTERNAL-1234"
              },
              "dateCreated": {
                "description": "When the case was created, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time"
              },
              "dateUpdated": {
                "description": "When the case was last updated, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time"
              },
              "dateClosed": {
                "description": "When the case was closed, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "owner": {
                "description": "Current owner of the case.",
                "type": "object",
                "properties": {
                  "number": {
                    "description": "Unique, numeric identifier for the person.",
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "description": "Name of the person.",
                    "type": "string",
                    "example": "John Smith"
                  },
                  "disabled": {
                    "description": "If the person is disabled in the system.",
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "lastUpdatedBy": {
                "description": "Last user to update the case.",
                "type": "object",
                "properties": {
                  "number": {
                    "description": "Unique, numeric identifier for the person.",
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "description": "Name of the person.",
                    "type": "string",
                    "example": "John Smith"
                  },
                  "disabled": {
                    "description": "If the person is disabled in the system.",
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "Name of the case.",
                "minLength": 1,
                "maxLength": 250,
                "example": "System Compromise"
              },
              "status": {
                "description": "Status of the case.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Display name of the status.",
                    "enum": [
                      "Created",
                      "Completed",
                      "Incident",
                      "Mitigated",
                      "Resolved"
                    ],
                    "example": "Mitigated"
                  },
                  "number": {
                    "type": "integer",
                    "description": "Numeric identifier of the status.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": 4
                  }
                }
              },
              "priority": {
                "type": "integer",
                "description": "Priority of the case.",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ],
                "example": 1
              },
              "dueDate": {
                "description": "When the case is due, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "resolution": {
                "description": "Description of how the case was resolved.",
                "type": "string",
                "maxLength": 500,
                "example": "Quarantined the target system for further investigation.",
                "nullable": true
              },
              "resolutionDateUpdated": {
                "description": "When the case resolution was last updated, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "resolutionLastUpdatedBy": {
                "description": "Last user to update the case resolution.",
                "type": "object",
                "properties": {
                  "number": {
                    "description": "Unique, numeric identifier for the person.",
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "description": "Name of the person.",
                    "type": "string",
                    "example": "John Smith"
                  },
                  "disabled": {
                    "description": "If the person is disabled in the system.",
                    "type": "boolean",
                    "example": false
                  }
                },
                "nullable": true
              },
              "summary": {
                "description": "Note summarizing the case.",
                "type": "string",
                "maxLength": 10000,
                "example": "Investigated a potential system compromise. More details at http://example.com/."
              },
              "entity": {
                "description": "Entity associated with the case.",
                "type": "object",
                "properties": {
                  "number": {
                    "description": "Unique, numeric identifier for the entity.",
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "description": "Name of the Entity.",
                    "type": "string",
                    "example": "Child Entity"
                  },
                  "fullName": {
                    "description": "A full representation of the Entity as child with its parent Entity.",
                    "type": "string",
                    "example": "Parent Entity/Child Entity"
                  }
                }
              },
              "collaborators": {
                "description": "List of collaborators on the case.",
                "x-omitempty": true,
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the person.",
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "description": "Name of the person.",
                      "type": "string",
                      "example": "John Smith"
                    },
                    "disabled": {
                      "description": "If the person is disabled in the system.",
                      "type": "boolean",
                      "example": false
                    }
                  }
                },
                "example": [
                  {
                    "number": 1,
                    "name": "John Smith"
                  },
                  {
                    "number": 2,
                    "name": "Jane Clark"
                  }
                ]
              },
              "tags": {
                "description": "List of tags added to the case.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Unique, numeric identifier for the tag.",
                      "type": "integer",
                      "example": 1
                    },
                    "text": {
                      "type": "string",
                      "description": "tag text",
                      "maxLength": 255,
                      "example": "System"
                    }
                  }
                },
                "example": [
                  {
                    "number": 1,
                    "text": "System"
                  },
                  {
                    "number": 2,
                    "text": "Urgent"
                  }
                ]
              }
            },
            "nullable": true
          }
        }
      },
      "CreateCase": {
        "type": "object",
        "required": [
          "name",
          "priority"
        ],
        "properties": {
          "externalId": {
            "description": "Externally defined identifier for the case.",
            "type": "string",
            "maxLength": 250,
            "example": "EXTERNAL-1234"
          },
          "name": {
            "type": "string",
            "description": "Name of the case.",
            "minLength": 1,
            "maxLength": 250,
            "example": "System Compromise"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the case.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "example": 1
          },
          "dueDate": {
            "description": "When the case is due, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "summary": {
            "description": "Note summarizing the case.",
            "type": "string",
            "maxLength": 10000,
            "example": "Investigated a potential system compromise. More details at http://example.com/."
          },
          "entityId": {
            "description": "Entity to assign to the case. Not setting this property will assign the case to the user's default entity. A null value creates a case unrestricted by entity.",
            "type": "integer"
          }
        }
      },
      "CreateTag": {
        "type": "object",
        "required": [
          "text"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "The text of the tag.",
            "minLength": 1,
            "maxLength": 255,
            "example": "System"
          }
        }
      },
      "UpdateCase": {
        "type": "object",
        "properties": {
          "externalId": {
            "description": "Externally defined identifier for the case.",
            "type": "string",
            "maxLength": 250,
            "example": "EXTERNAL-1234"
          },
          "name": {
            "type": "string",
            "description": "Name of the case.",
            "minLength": 1,
            "maxLength": 250,
            "example": "System Compromise"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the case.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "example": 1
          },
          "dueDate": {
            "description": "When the case is due, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "summary": {
            "description": "Note summarizing the case.",
            "type": "string",
            "maxLength": 10000,
            "example": "Investigated a potential system compromise. More details at http://example.com/."
          },
          "resolution": {
            "description": "Description of how the case was resolved.",
            "type": "string",
            "maxLength": 500,
            "example": "Quarantined the target system for further investigation.",
            "nullable": true
          },
          "entityId": {
            "description": "Entity to assign to the case.",
            "type": "integer"
          }
        }
      },
      "ChangeStatus": {
        "type": "object",
        "required": [
          "statusNumber"
        ],
        "properties": {
          "statusNumber": {
            "type": "integer",
            "description": "Numeric identifier of the status.",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "example": 4
          }
        }
      },
      "AssociateCaseIds": {
        "type": "object",
        "required": [
          "ids"
        ],
        "properties": {
          "ids": {
            "description": "List of case identifiers.",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
              "type": "string",
              "format": "uuid",
              "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
            }
          }
        }
      },
      "CaseCollaboratorNumbers": {
        "type": "object",
        "required": [
          "numbers"
        ],
        "properties": {
          "numbers": {
            "description": "List of numeric person identifiers.",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "description": "Unique, numeric identifier for the person.",
              "type": "integer",
              "example": 1
            }
          }
        }
      },
      "AddCollaborators": {
        "type": "object",
        "properties": {
          "numbers": {
            "description": "List of numeric person identifiers.",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "description": "Numeric identifier for the person or notification group.",
              "type": "integer",
              "example": 1
            }
          },
          "groupNumbers": {
            "description": "List of numeric notification group identifiers.",
            "type": "array",
            "items": {
              "description": "Numeric identifier for the person or notification group.",
              "type": "integer",
              "example": 1
            }
          }
        }
      },
      "CaseCollaborators": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Current owner of the case.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "collaborators": {
            "description": "List of collaborators on the case.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "description": "Unique, numeric identifier for the person.",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Name of the person.",
                  "type": "string",
                  "example": "John Smith"
                },
                "disabled": {
                  "description": "If the person is disabled in the system.",
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        }
      },
      "UpdateCaseCollaborators": {
        "type": "object",
        "required": [
          "owner",
          "collaborators"
        ],
        "properties": {
          "owner": {
            "description": "Unique, numeric identifier for the person.",
            "type": "integer",
            "example": 1
          },
          "collaborators": {
            "type": "array",
            "minItems": 1,
            "maxItems": 1000,
            "items": {
              "description": "Numeric identifier for the person or notification group.",
              "type": "integer",
              "example": 1
            }
          }
        }
      },
      "ChangeCaseOwner": {
        "type": "object",
        "required": [
          "number"
        ],
        "properties": {
          "number": {
            "description": "Unique, numeric identifier for the person.",
            "type": "integer",
            "example": 1
          }
        }
      },
      "CaseTagNumbers": {
        "type": "object",
        "required": [
          "numbers"
        ],
        "properties": {
          "numbers": {
            "description": "List of numeric tag identifiers.",
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "items": {
              "description": "Unique, numeric identifier for the tag.",
              "type": "integer",
              "example": 1
            }
          }
        }
      },
      "Evidence": {
        "type": "object",
        "properties": {
          "number": {
            "description": "Unique, numeric identifier for the evidence.",
            "type": "integer",
            "example": 1
          },
          "dateCreated": {
            "description": "When the evidence was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "description": "When the evidence was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "description": "User that created the evidence.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "lastUpdatedBy": {
            "description": "Last user to update the evidence.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "type": {
            "description": "The type of evidence.",
            "type": "string",
            "enum": [
              "note",
              "file",
              "log",
              "alarm",
              "userEvents",
              "unknown"
            ]
          },
          "status": {
            "description": "The status of the evidence.\n\n\\- *pending*. The evidence is being processed.\n\n\\- *completed*. The evidence entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the evidence and it is unavailable.\n\n\\- *unknown*. The current status of the evidence cannot be determined.\n",
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed",
              "unknown"
            ],
            "example": "completed"
          },
          "statusMessage": {
            "description": "If adding evidence failed, describes the failure reason.",
            "type": "string",
            "example": null,
            "nullable": true
          },
          "text": {
            "description": "Note describing the evidence.",
            "type": "string",
            "example": "Need to investigate target host"
          },
          "pinned": {
            "description": "Whether the evidence is pinned.",
            "type": "boolean",
            "example": true
          },
          "datePinned": {
            "description": "When the evidence was pinned, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "file": {
            "description": "Properties of the file uploaded as evidence.",
            "x-omitempty": true,
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the uploaded file.",
                "type": "string",
                "example": "instructions.pdf"
              },
              "size": {
                "description": "Size of the file in bytes.",
                "type": "integer",
                "example": 1024
              }
            },
            "nullable": true
          },
          "alarm": {
            "description": "Properties of the alarm added as evidence.",
            "x-omitempty": true,
            "type": "object",
            "properties": {
              "alarmId": {
                "description": "Unique, numeric identifier for the alarm.",
                "type": "integer",
                "example": 1
              },
              "alarmDate": {
                "description": "When the alarm fired, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time"
              },
              "alarmRuleId": {
                "description": "Unique, numeric identifier for the alarm rule that fired the alarm.",
                "type": "integer",
                "example": 1
              },
              "alarmRuleName": {
                "description": "Name of the rule that fired the alarm.",
                "type": "string",
                "example": "Compromised System Detected"
              },
              "dateInserted": {
                "description": "When the alarm was inserted in the database, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time"
              },
              "entityId": {
                "description": "Unique, numeric identifier for the entity with which the alarm is associated.",
                "type": "integer",
                "example": 1
              },
              "entityName": {
                "description": "Name of the entity with which the alarm is associated.",
                "type": "string",
                "example": "Primary Entity"
              },
              "riskBasedPriorityMax": {
                "description": "The RBP score, indicating the severity of the alarm, on a scale of 1-100.",
                "type": "integer",
                "example": 85
              }
            },
            "nullable": true
          },
          "logs": {
            "description": "Properties of the log set added as evidence.",
            "x-omitempty": true,
            "type": "object",
            "properties": {
              "logCount": {
                "description": "Number of logs in the set.",
                "type": "integer",
                "example": 100
              },
              "query": {
                "description": "Query used to add logs as evidence.",
                "type": "string",
                "example": "messageId:(744280 OR 728289)",
                "nullable": true
              },
              "searchIndexId": {
                "description": "Id of the index containing the log data.",
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "userEvents": {
            "description": "Properties of the user event set added as evidence.",
            "x-omitempty": true,
            "type": "object",
            "properties": {
              "identityId": {
                "description": "The unique identifier of the user identity for the added events.",
                "type": "string",
                "minLength": 1,
                "maxLength": 255,
                "example": 1
              },
              "score": {
                "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
                "type": "integer",
                "example": 85
              },
              "eventCount": {
                "description": "The number of events in the set.",
                "type": "integer",
                "example": 15
              },
              "analysisStartDate": {
                "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time"
              },
              "analysisEndDate": {
                "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time"
              }
            },
            "nullable": true
          }
        },
        "example": {
          "number": 1,
          "dateCreated": "2017-09-27T18:21:44.000Z",
          "dateUpdated": "2017-09-27T18:21:44.000Z",
          "createdBy": {
            "number": 1,
            "name": "John Smith"
          },
          "lastUpdatedBy": {
            "number": 1,
            "name": "John Smith"
          },
          "type": "note",
          "status": "completed",
          "text": "Need to investigate target host",
          "pinned": true,
          "datePinned": "2017-09-27T18:21:44.000Z"
        }
      },
      "FileMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the file upload, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "fc6efecb-e78f-4d07-ab4e-25c655a75e55"
          },
          "dateCreated": {
            "description": "When the metadata was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "dateUpdated": {
            "description": "When the metadata was updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "status": {
            "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed",
              "unknown"
            ],
            "example": "completed"
          },
          "name": {
            "description": "Name of the uploaded file.",
            "type": "string",
            "example": "instructions.pdf"
          },
          "size": {
            "description": "Size of the uploaded file in bytes.",
            "type": "integer",
            "example": 1024
          },
          "mimeType": {
            "description": "MIME type of the uploaded file.",
            "type": "string",
            "maxLength": 127,
            "example": "application/pdf"
          }
        }
      },
      "UserEventsEvidence": {
        "description": "Properties of the user event set added as evidence.",
        "type": "object",
        "properties": {
          "identityId": {
            "description": "The unique identifier of the user identity for the added events.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": 1
          },
          "score": {
            "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
            "type": "integer",
            "example": 85
          },
          "eventCount": {
            "description": "The number of events in the set.",
            "type": "integer",
            "example": 15
          },
          "analysisStartDate": {
            "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "analysisEndDate": {
            "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LogsIndexStatus": {
        "description": "The status of a logs index for a case.",
        "type": "object",
        "properties": {
          "indexId": {
            "description": "The unique ID of the logs index.",
            "type": "string",
            "format": "uuid",
            "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
          },
          "state": {
            "description": "The state of the logs index.",
            "type": "string",
            "enum": [
              "unknown",
              "ready",
              "rebuilding",
              "error",
              "archived"
            ],
            "example": "ready"
          },
          "message": {
            "description": "Information regarding the status of the logs index.",
            "type": "string",
            "example": "The logs index is ready to use."
          },
          "dateCreated": {
            "description": "When the logs index was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "description": "When the logs index was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "dateRebuilt": {
            "description": "When the logs index was unarchived, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "description": "Last user to update the logs index.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "LogsBytes": {
        "description": "The logs bytes of a log evidence.",
        "type": "object",
        "properties": {
          "bytes": {
            "description": "The logs bytes of an item of log evidence, as a gzipped and base64-encoded string.",
            "type": "string"
          }
        }
      },
      "CaseMetrics": {
        "type": "object",
        "properties": {
          "created": {
            "type": "object",
            "properties": {
              "date": {
                "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "originalDate": {
                "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "customDate": {
                "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "note": {
                "description": "A reason for the custom metric date.",
                "type": "string",
                "maxLength": 500,
                "example": ""
              }
            }
          },
          "completed": {
            "type": "object",
            "properties": {
              "date": {
                "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "originalDate": {
                "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "customDate": {
                "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "note": {
                "description": "A reason for the custom metric date.",
                "type": "string",
                "maxLength": 500,
                "example": ""
              }
            }
          },
          "incident": {
            "type": "object",
            "properties": {
              "date": {
                "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "originalDate": {
                "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "customDate": {
                "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "note": {
                "description": "A reason for the custom metric date.",
                "type": "string",
                "maxLength": 500,
                "example": ""
              }
            }
          },
          "mitigated": {
            "type": "object",
            "properties": {
              "date": {
                "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "originalDate": {
                "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "customDate": {
                "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "note": {
                "description": "A reason for the custom metric date.",
                "type": "string",
                "maxLength": 500,
                "example": ""
              }
            }
          },
          "resolved": {
            "type": "object",
            "properties": {
              "date": {
                "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "originalDate": {
                "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "customDate": {
                "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "note": {
                "description": "A reason for the custom metric date.",
                "type": "string",
                "maxLength": 500,
                "example": ""
              }
            }
          },
          "earliestEvidence": {
            "type": "object",
            "properties": {
              "date": {
                "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "originalDate": {
                "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "customDate": {
                "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "note": {
                "description": "A reason for the custom metric date.",
                "type": "string",
                "maxLength": 500,
                "example": ""
              }
            }
          }
        },
        "example": {
          "created": {
            "date": "2017-09-15T15:49:53.499Z",
            "originalDate": "2017-09-15T15:49:53.499Z",
            "customDate": null,
            "note": ""
          },
          "completed": {
            "date": null,
            "originalDate": null,
            "customDate": null,
            "note": ""
          },
          "incident": {
            "date": "2017-09-15T15:49:53.499Z",
            "originalDate": "2017-09-15T15:49:53.499Z",
            "customDate": null,
            "note": ""
          },
          "mitigated": {
            "date": "2017-09-15T15:49:53.499Z",
            "originalDate": "2017-09-15T15:49:53.499Z",
            "customDate": null,
            "note": ""
          },
          "resolved": {
            "date": null,
            "originalDate": null,
            "customDate": null,
            "note": ""
          },
          "earliestEvidence": {
            "date": "2017-09-15T09:47:22.000Z",
            "originalDate": "2017-09-15T09:45:22.000Z",
            "customDate": "2017-09-15T09:45:22.000Z",
            "note": "Custom date for earliest evidence"
          }
        }
      },
      "CaseMetric": {
        "type": "object",
        "properties": {
          "date": {
            "description": "The date of the metric determined by the system or the custom date, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalDate": {
            "description": "The date of the metric as determined by the system, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customDate": {
            "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "note": {
            "description": "A reason for the custom metric date.",
            "type": "string",
            "maxLength": 500,
            "example": ""
          }
        }
      },
      "CustomCaseMetric": {
        "type": "object",
        "properties": {
          "customDate": {
            "description": "A specified custom date for the metric, which overrides the date determined by the system, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "note": {
            "description": "A reason for the custom metric date.",
            "type": "string",
            "maxLength": 500,
            "example": ""
          }
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "number": {
            "description": "Unique, numeric identifier for the person.",
            "type": "integer",
            "example": 1
          },
          "name": {
            "description": "Name of the person.",
            "type": "string",
            "example": "John Smith"
          },
          "disabled": {
            "description": "If the person is disabled in the system.",
            "type": "boolean",
            "example": false
          }
        }
      },
      "Entity": {
        "type": "object",
        "properties": {
          "number": {
            "description": "Unique, numeric identifier for the entity.",
            "type": "integer",
            "example": 1
          },
          "name": {
            "description": "Name of the Entity.",
            "type": "string",
            "example": "Child Entity"
          },
          "fullName": {
            "description": "A full representation of the Entity as child with its parent Entity.",
            "type": "string",
            "example": "Parent Entity/Child Entity"
          }
        }
      },
      "Collaborator": {
        "type": "object",
        "properties": {
          "number": {
            "description": "Numeric identifier for the person or notification group.",
            "type": "integer",
            "example": 1
          },
          "name": {
            "description": "Name of the person or notification group.",
            "type": "string",
            "example": "Notification Group"
          },
          "type": {
            "description": "Type of object.",
            "type": "string",
            "enum": [
              "person",
              "group"
            ],
            "example": "group"
          }
        }
      },
      "History": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the history, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "9484cd8c-333d-4919-ad07-cb92c1abea2b"
          },
          "date": {
            "description": "When the history was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "actor": {
            "description": "The user that took action, creating the history.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "action": {
            "description": "The type of action that created the history.",
            "type": "string",
            "example": "UpdateCase"
          },
          "resources": {
            "description": "Resources created or otherwise involved in the action that created the history.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique identifier for the resource, as an RFC 4122 formatted string.",
                  "type": "string",
                  "format": "uuid",
                  "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
                },
                "type": {
                  "description": "The resource type.",
                  "type": "string",
                  "example": "Case"
                },
                "displayName": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "example": "System Compromise"
                },
                "retired": {
                  "description": "Whether the resource has been retired or is still active.",
                  "type": "boolean",
                  "x-omitempty": true,
                  "example": false,
                  "nullable": true
                },
                "properties": {
                  "description": "A set of properties describing what changed in the resource.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the resource property.",
                        "type": "string",
                        "example": "summary"
                      },
                      "from": {
                        "description": "The value of the property prior being changed.",
                        "type": "object",
                        "example": ""
                      },
                      "to": {
                        "description": "The value of the property after being changed.",
                        "type": "object",
                        "example": "Investigated a potential system compromise. More details at http://example.com/."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the resource, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
          },
          "type": {
            "description": "The resource type.",
            "type": "string",
            "example": "Case"
          },
          "displayName": {
            "description": "The name of the resource.",
            "type": "string",
            "example": "System Compromise"
          },
          "retired": {
            "description": "Whether the resource has been retired or is still active.",
            "type": "boolean",
            "x-omitempty": true,
            "example": false,
            "nullable": true
          },
          "properties": {
            "description": "A set of properties describing what changed in the resource.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the resource property.",
                  "type": "string",
                  "example": "summary"
                },
                "from": {
                  "description": "The value of the property prior being changed.",
                  "type": "object",
                  "example": ""
                },
                "to": {
                  "description": "The value of the property after being changed.",
                  "type": "object",
                  "example": "Investigated a potential system compromise. More details at http://example.com/."
                }
              }
            }
          }
        }
      },
      "Property": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the resource property.",
            "type": "string",
            "example": "summary"
          },
          "from": {
            "description": "The value of the property prior being changed.",
            "type": "object",
            "example": ""
          },
          "to": {
            "description": "The value of the property after being changed.",
            "type": "object",
            "example": "Investigated a potential system compromise. More details at http://example.com/."
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "number": {
            "description": "Unique, numeric identifier for the tag.",
            "type": "integer",
            "example": 1
          },
          "text": {
            "type": "string",
            "description": "The text of the tag.",
            "minLength": 1,
            "maxLength": 255,
            "example": "System"
          },
          "dateCreated": {
            "description": "When the tag was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "description": "User that created the tag.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "CaseTag": {
        "type": "object",
        "properties": {
          "number": {
            "description": "Unique, numeric identifier for the tag.",
            "type": "integer",
            "example": 1
          },
          "text": {
            "type": "string",
            "description": "tag text",
            "maxLength": 255,
            "example": "System"
          }
        }
      },
      "CreateUserEventsEvidence": {
        "type": "object",
        "required": [
          "identityId",
          "score",
          "events",
          "analysisStartDate",
          "analysisEndDate"
        ],
        "properties": {
          "identityId": {
            "description": "The unique identifier of the user identity for the added events.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "example": 1
          },
          "score": {
            "description": "The score of analyzed events, indicating the severity of the events, on a scale of 1-100.",
            "type": "integer",
            "example": 85
          },
          "analysisStartDate": {
            "description": "The start of the analysis period for the events, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "analysisEndDate": {
            "description": "The end of the analysis period for the events, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "events": {
            "description": "A set of user events.",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "earliestEvidenceDate": {
            "description": "The date of the first event in the set, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Progress": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "bytesTransferred": {
            "description": "The number of bytes that have been processed and written to the backing store. Only applicable for file evidence.",
            "type": "integer",
            "x-omitempty": true,
            "nullable": true
          },
          "status": {
            "description": "The current processing status of the evidence. Only applicable for file evidence.",
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed",
              "unknown"
            ]
          }
        }
      },
      "FileUploadProgress": {
        "type": "object",
        "required": [
          "bytesUploaded",
          "fileSizeBytes",
          "status"
        ],
        "properties": {
          "bytesUploaded": {
            "description": "The number of bytes that have been processed and written to the database.",
            "type": "integer"
          },
          "fileSizeBytes": {
            "description": "The number of bytes contained in the file.",
            "type": "integer"
          },
          "status": {
            "description": "The status of the upload. \\- *pending*. The upload is being processed.\n\n\\- *completed*. The upload entry has completed processing and is ready.\n\n\\- *failed*. There was an error processing the upload and it is unavailable.\n\n\\- *unknown*. The current status of the upload cannot be determined.\n",
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed",
              "unknown"
            ],
            "example": "completed"
          }
        }
      },
      "Note": {
        "type": "object",
        "required": [
          "text"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "Note text.",
            "maxLength": 20000,
            "minLength": 1
          }
        }
      },
      "AddPlaybook": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
          }
        }
      },
      "PlaybookPermissions": {
        "description": "Roles and entities that can read/write to this playbook.",
        "type": "object",
        "required": [
          "read",
          "write"
        ],
        "properties": {
          "read": {
            "type": "string",
            "description": "Level of permission, by role.",
            "enum": [
              "privateOwnerOnly",
              "publicGlobalAdmin",
              "publicGlobalAnalyst",
              "publicRestrictedAdmin",
              "publicRestrictedAnalyst",
              "publicAllUsers"
            ]
          },
          "write": {
            "type": "string",
            "description": "Level of permission, by role.",
            "enum": [
              "privateOwnerOnly",
              "publicGlobalAdmin",
              "publicGlobalAnalyst",
              "publicRestrictedAdmin",
              "publicRestrictedAnalyst",
              "publicAllUsers"
            ]
          }
        }
      },
      "CreatePlaybook": {
        "type": "object",
        "required": [
          "name",
          "permissions",
          "entities"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the playbook.",
            "minLength": 1,
            "maxLength": 150,
            "example": "System Compromise"
          },
          "description": {
            "description": "Summary of the playbook.",
            "type": "string",
            "maxLength": 1000,
            "example": "Procedures for a potential system compromise. More details at http://example.com/."
          },
          "permissions": {
            "description": "Roles and entities that can read/write to this playbook.",
            "type": "object",
            "required": [
              "read",
              "write"
            ],
            "properties": {
              "read": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              },
              "write": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              }
            }
          },
          "entities": {
            "description": "List of entity numbers that can access this playbook.  An empty list will assign the playbook to the user's default entity.",
            "type": "array",
            "minItems": 0,
            "maxItems": 1,
            "items": {
              "type": "integer"
            },
            "example": [
              1
            ]
          },
          "tags": {
            "description": "List of numeric tag identifiers.",
            "type": "array",
            "items": {
              "description": "Unique, numeric identifier for the tag.",
              "type": "integer",
              "example": 1
            },
            "example": [
              1,
              2
            ]
          }
        }
      },
      "PutPlaybook": {
        "type": "object",
        "required": [
          "name",
          "description",
          "permissions",
          "entities",
          "tags"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the playbook.",
            "minLength": 1,
            "maxLength": 150,
            "example": "System Compromise"
          },
          "description": {
            "description": "Summary of the playbook.",
            "type": "string",
            "maxLength": 1000,
            "example": "Procedures for a potential system compromise. More details at http://example.com/."
          },
          "permissions": {
            "description": "Roles and entities that can read/write to this playbook.",
            "type": "object",
            "required": [
              "read",
              "write"
            ],
            "properties": {
              "read": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              },
              "write": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              }
            }
          },
          "entities": {
            "description": "List of entity numbers that can access this playbook.  An empty list will assign the playbook to the user's default entity.",
            "type": "array",
            "minItems": 0,
            "maxItems": 1,
            "items": {
              "type": "integer"
            },
            "example": [
              1
            ]
          },
          "tags": {
            "description": "List of numeric tag identifiers.",
            "type": "array",
            "items": {
              "description": "Unique, numeric identifier for the tag.",
              "type": "integer",
              "example": 1
            },
            "example": [
              1,
              2
            ]
          }
        }
      },
      "UpdatePlaybook": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the playbook.",
            "minLength": 1,
            "maxLength": 150,
            "example": "System Compromise"
          },
          "description": {
            "description": "Summary of the playbook.",
            "type": "string",
            "maxLength": 1000,
            "example": "Procedures for a potential system compromise. More details at http://example.com/."
          },
          "permissions": {
            "description": "Roles and entities that can read/write to this playbook.",
            "type": "object",
            "required": [
              "read",
              "write"
            ],
            "properties": {
              "read": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              },
              "write": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              }
            }
          },
          "entities": {
            "description": "List of entity numbers that can access this playbook.",
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "items": {
              "type": "integer"
            },
            "example": [
              1
            ]
          },
          "owner": {
            "description": "Unique, numeric identifier for the owner. Can only be modified by global administrators.",
            "type": "integer",
            "example": 1
          },
          "retired": {
            "description": "Retired status of playbook.",
            "type": "boolean",
            "example": false
          },
          "tags": {
            "description": "List of numeric tag identifiers. This list of tags will overwrite the tags currently on the playbook.",
            "type": "array",
            "items": {
              "description": "Unique, numeric identifier for the tag.",
              "type": "integer",
              "example": 1
            },
            "example": [
              1,
              2
            ]
          }
        }
      },
      "PlaybookDetails": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the playbook, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "803743D5-D13C-4AAD-BBF2-5CB8E6288349"
          },
          "name": {
            "type": "string",
            "description": "Name of the playbook.",
            "minLength": 1,
            "maxLength": 150,
            "example": "System Compromise"
          },
          "description": {
            "description": "Summary of the playbook.",
            "type": "string",
            "maxLength": 1000,
            "example": "Procedures for a potential system compromise. More details at http://example.com/."
          },
          "permissions": {
            "description": "Roles and entities that can read/write to this playbook.",
            "type": "object",
            "required": [
              "read",
              "write"
            ],
            "properties": {
              "read": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              },
              "write": {
                "type": "string",
                "description": "Level of permission, by role.",
                "enum": [
                  "privateOwnerOnly",
                  "publicGlobalAdmin",
                  "publicGlobalAnalyst",
                  "publicRestrictedAdmin",
                  "publicRestrictedAnalyst",
                  "publicAllUsers"
                ]
              }
            }
          },
          "owner": {
            "description": "Current owner of the playbook.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "retired": {
            "description": "Retired status of playbook.",
            "type": "boolean",
            "example": false
          },
          "entities": {
            "description": "List of entities associated with the playbook.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "description": "Unique, numeric identifier for the entity.",
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "description": "Name of the Entity.",
                  "type": "string",
                  "example": "Child Entity"
                },
                "fullName": {
                  "description": "A full representation of the Entity as child with its parent Entity.",
                  "type": "string",
                  "example": "Parent Entity/Child Entity"
                }
              }
            }
          },
          "dateCreated": {
            "description": "When the playbook was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "description": "When the playbook was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "description": "Last user to update the playbook.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "tags": {
            "description": "List of tags added to the playbook.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "description": "Unique, numeric identifier for the tag.",
                  "type": "integer",
                  "example": 1
                },
                "text": {
                  "type": "string",
                  "description": "tag text",
                  "maxLength": 255,
                  "example": "System"
                }
              }
            },
            "example": [
              {
                "number": 1,
                "text": "System"
              },
              {
                "number": 2,
                "text": "Urgent"
              }
            ]
          }
        }
      },
      "UpsertProcedure": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "id": {
            "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "232D7C34-7FB4-4A66-8247-C52FDEDC2185"
          },
          "name": {
            "type": "string",
            "description": "Name of the procedure.",
            "minLength": 1,
            "maxLength": 150,
            "example": "Notify HR"
          },
          "description": {
            "description": "Detailed information on the procedure.",
            "type": "string",
            "maxLength": 4000,
            "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
          },
          "dueWithinSeconds": {
            "description": "Duration, in seconds, from which a procedure is due after it is attached to a case. The maximum is one year.",
            "type": "integer",
            "minimum": 0,
            "maximum": 31536000,
            "default": 0
          }
        }
      },
      "ProcedureDetails": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the procedure, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "232D7C34-7FB4-4A66-8247-C52FDEDC2185"
          },
          "name": {
            "type": "string",
            "description": "Name of the procedure.",
            "minLength": 1,
            "maxLength": 150,
            "example": "Notify HR"
          },
          "description": {
            "description": "Detailed information on the procedure.",
            "type": "string",
            "maxLength": 4000,
            "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
          },
          "dueWithinSeconds": {
            "description": "Duration, in seconds, from which a procedure is due after it is attached to a case. The maximum is one year.",
            "type": "integer",
            "minimum": 0,
            "maximum": 31536000,
            "default": 0
          },
          "dateCreated": {
            "description": "When the case was created, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlaybookOnCaseDetails": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "2CDC171A-6AF3-451B-BDAB-73C083E50698"
          },
          "name": {
            "type": "string",
            "description": "Name of the playbook.",
            "minLength": 1,
            "maxLength": 150,
            "example": "System Compromise"
          },
          "description": {
            "description": "Summary of the playbook.",
            "type": "string",
            "maxLength": 1000,
            "example": "Procedures for a potential system compromise. More details at http://example.com/."
          },
          "originalPlaybookId": {
            "description": "Unique identifier for the original playbook, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "23362E57-FE85-449C-9973-968EE319BF98"
          },
          "dateAdded": {
            "description": "When the playbook was added to the case, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "description": "When the playbook on the case was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "description": "Last user to update the playbook on the case.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "pinned": {
            "description": "Whether the playbook is pinned.",
            "type": "boolean",
            "example": true
          },
          "datePinned": {
            "description": "When the playbook was pinned, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "example": "2017-09-27T18:21:44.000Z",
            "nullable": true
          },
          "procedures": {
            "description": "Information about procedures on the playbook attached to a case.",
            "type": "object",
            "properties": {
              "total": {
                "description": "Total number of procedures on the playbook.",
                "type": "integer",
                "example": 10
              },
              "notCompleted": {
                "description": "Total number of procedures on the playbook that have not been completed.",
                "type": "integer",
                "example": 2
              },
              "completed": {
                "description": "Total number of procedures on the playbook that have been completed.",
                "type": "integer",
                "example": 3
              },
              "skipped": {
                "description": "Total number of procedures on the playbook that have been skipped.",
                "type": "integer",
                "example": 5
              },
              "pastDue": {
                "description": "Total number of incomplete procedures on the playbook that are past due.",
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      },
      "UpdatePlaybookOnCase": {
        "type": "object",
        "properties": {
          "pinned": {
            "description": "Pinned status of the playbook on the case.",
            "type": "boolean"
          }
        }
      },
      "ProcedureOnCase": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "83FEE80B-998E-467B-B554-84922D8EB908"
          },
          "name": {
            "type": "string",
            "description": "Name of the procedure.",
            "minLength": 1,
            "maxLength": 150,
            "example": "Notify HR"
          },
          "description": {
            "description": "Detailed information on the procedure.",
            "type": "string",
            "maxLength": 4000,
            "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
          },
          "assignee": {
            "description": "Person the procedure is assigned to.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the procedure.",
            "enum": [
              "NotCompleted",
              "Completed",
              "Skipped"
            ],
            "example": "Completed"
          },
          "dueDate": {
            "description": "When the procedure is due, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "description": "Notes about the procedure.",
            "type": "string",
            "maxLength": 1000,
            "example": "Sent email to Sarah. Awaiting reply."
          },
          "dateUpdated": {
            "description": "When the procedure on the playbook added to a case was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "description": "Last person to update the procedure on the playbook added to a case.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "ProcedureOnCaseWithCaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the procedure on a playbook added to a case, as an RFC 4122 formatted string.",
            "type": "string",
            "format": "uuid",
            "example": "83FEE80B-998E-467B-B554-84922D8EB908"
          },
          "name": {
            "type": "string",
            "description": "Name of the procedure.",
            "minLength": 1,
            "maxLength": 150,
            "example": "Notify HR"
          },
          "description": {
            "description": "Detailed information on the procedure.",
            "type": "string",
            "maxLength": 4000,
            "example": "Send email to sarah.smith@company.com with name, title, and department of the impacted user."
          },
          "assignee": {
            "description": "Person the procedure is assigned to.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the procedure.",
            "enum": [
              "NotCompleted",
              "Completed",
              "Skipped"
            ],
            "example": "Completed"
          },
          "dueDate": {
            "description": "When the procedure is due, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "description": "Notes about the procedure.",
            "type": "string",
            "maxLength": 1000,
            "example": "Sent email to Sarah. Awaiting reply."
          },
          "dateUpdated": {
            "description": "When the procedure on the playbook added to a case was last updated, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedBy": {
            "description": "Last person to update the procedure on the playbook added to a case.",
            "type": "object",
            "properties": {
              "number": {
                "description": "Unique, numeric identifier for the person.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "description": "Name of the person.",
                "type": "string",
                "example": "John Smith"
              },
              "disabled": {
                "description": "If the person is disabled in the system.",
                "type": "boolean",
                "example": false
              }
            }
          },
          "casePlaybook": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for the playbook on the case, as an RFC 4122 formatted string.",
                "type": "string",
                "format": "uuid",
                "example": "2CDC171A-6AF3-451B-BDAB-73C083E50698"
              },
              "name": {
                "type": "string",
                "description": "Name of the playbook.",
                "minLength": 1,
                "maxLength": 150,
                "example": "System Compromise"
              }
            }
          },
          "case": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique identifier for the case, as an RFC 4122 formatted string.",
                "type": "string",
                "format": "uuid",
                "example": "baca95ad-e9d7-4270-a677-da0cf4a587d8"
              },
              "number": {
                "description": "Unique, numeric identifier for the case.",
                "type": "integer",
                "example": 1
              },
              "name": {
                "type": "string",
                "description": "Name of the case.",
                "minLength": 1,
                "maxLength": 250,
                "example": "System Compromise"
              },
              "dueDate": {
                "description": "When the case is due, as an RFC 3339 formatted string.",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "priority": {
                "type": "integer",
                "description": "Priority of the case.",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ],
                "example": 1
              },
              "status": {
                "description": "Status of the case.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Display name of the status.",
                    "enum": [
                      "Created",
                      "Completed",
                      "Incident",
                      "Mitigated",
                      "Resolved"
                    ],
                    "example": "Mitigated"
                  },
                  "number": {
                    "type": "integer",
                    "description": "Numeric identifier of the status.",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "example": 4
                  }
                }
              },
              "owner": {
                "description": "Current owner of the case.",
                "type": "object",
                "properties": {
                  "number": {
                    "description": "Unique, numeric identifier for the person.",
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "description": "Name of the person.",
                    "type": "string",
                    "example": "John Smith"
                  },
                  "disabled": {
                    "description": "If the person is disabled in the system.",
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        }
      },
      "UpdateProcedureOnCase": {
        "type": "object",
        "properties": {
          "assignee": {
            "description": "Unique, numeric identifier for the person to which procedure is assigned.",
            "type": "integer",
            "example": 1,
            "nullable": true
          },
          "notes": {
            "description": "Notes about the procedure.",
            "type": "string",
            "maxLength": 1000,
            "example": "Sent email to Sarah. Awaiting reply."
          },
          "dueDate": {
            "description": "When the procedure is due, as an RFC 3339 formatted string.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the procedure.",
            "enum": [
              "NotCompleted",
              "Completed",
              "Skipped"
            ],
            "example": "Completed"
          }
        }
      },
      "ErrorWithDetails": {
        "type": "object",
        "properties": {
          "statusCode": {
            "description": "HTTP Status Code",
            "type": "integer"
          },
          "message": {
            "description": "A short, human-readable summary of the problem that does not change from occurrence to occurrence.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          }
        }
      },
      "FeatureFlags": {
        "type": "object",
        "properties": {
          "onDemandLogIndexUnarchivingEnabled": {
            "description": "Indicates whether case logs evidence can be restored on-demand for a closed case.",
            "type": "boolean"
          },
          "caseEntityEnabled": {
            "description": "Indicates whether entity restrictions are available for case management.",
            "type": "boolean"
          }
        }
      },
      "LogEvidenceTTLMaintenanceResult": {
        "type": "object",
        "properties": {
          "archivedLogIndexCount": {
            "description": "Number of logs indexes archived during maintenance.",
            "type": "integer",
            "example": 2
          }
        }
      },
      "Capabilities": {
        "type": "object",
        "properties": {
          "caseEntityEnforcement": {
            "description": "Indicates the current case entity restriction level.",
            "type": "string",
            "enum": [
              "none",
              "warn",
              "enforce"
            ]
          }
        }
      }
    }
  }
}